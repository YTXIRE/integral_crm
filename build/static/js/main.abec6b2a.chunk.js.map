{"version":3,"sources":["componets/settings/config.js","componets/UI/Dialog/Dialog.js","componets/settings/fns.js","componets/CardCompany.js","componets/UI/Dialog/DialogCardProviders.js","componets/CardProviders.js","componets/UI/Select/Select.js","componets/TableProvider.js","componets/Export.js","componets/UI/TablePayoff.js","componets/projectAccounting/settings/config.js","componets/projectAccounting/settings/fns.js","componets/projectAccounting/CardCompany.js","componets/projectAccounting/CardProviders.js","componets/projectAccounting/TableProvider.js","componets/projectAccounting/UI/Select/Select.js","componets/projectAccounting/UI/TablePayoff.js","componets/projectAccounting/Drawer.js","componets/Drawer.js","componets/UI/Dialog/DialogAddCement.js","componets/Settings.js","componets/Login.js","App.js","serviceWorker.js","index.js"],"names":["props","React","useState","open","setOpen","handleClose","a","undefined","name","document","querySelector","value","trim","axios","post","config","iconType","fetchData","style","backgroundColor","IconButton","color","marginLeft","marginBottom","aria-label","onClick","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","TextField","autoFocus","margin","label","type","fullWidth","DialogActions","Button","numberWithSpaces","x","parts","toString","includes","split","replace","length","push","join","checkMinus","data","firstLetterToLowerCase","str","toUpperCase","slice","useStyles","makeStyles","root","minWidth","title","fontSize","payoff","setPayoff","company","setCompany","companyName","setCompanyName","rows","companyTmp","arraySum","array","aoNewGround","oooNewGround","oooIntegral","i","Number","Math","round","fetchDataCompany","get","item","dataCompany","JSON","parse","localStorage","getItem","provider","map","tempProvider","tmpProvidersCards","objects","providersDataPayOff","subTotal","subTotal2","object","comment","toLowerCase","delivery","plain","underloading","tmpCard","tmpCard2","useEffect","isUpdate","classes","width","to","textDecoration","setItem","stringify","Card","className","CardContent","Typography","variant","component","gutterBottom","fontWeight","total","total2","fetchDataProviderCards","setProvider","providerName","setProviderName","DialogCardProviders","key","random","theme","formControl","spacing","selectEmpty","marginTop","cement","setCement","FormControl","Select","labelId","onChange","event","target","updatedCement","MenuItem","state","setState","providersDataPayOffs","setProvidersDataPayOffs","setTotal","isLoad","setIsLoad","updateCement","setUpdateCement","sortBy","arr","sort","b","summ","volume","getElementById","price","element","parent","parentElement","newElement","createElement","cssText","placeholder","toFixed","remove","append","sumErcon","count","querySelectorAll","countLabel","dataset","textContent","fetchDictionaryCement","dataTmpCement","dataTmpCement2","dataTmpCement3","dataTmpCement4","providersDataPayOffTmp","providersDataPayOffTemp","subTotalTmp","tmp","tmp2","pricePerOneTon","columns","field","emptyValue","headerStyle","textAlign","cellStyle","padding","lookup","editComponent","border","borderBottom","outline","paddingBottom","e","1","2","3","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","icons","localization","header","actions","body","emptyDataSourceMessage","filterRow","filterTooltip","addTooltip","deleteTooltip","editTooltip","editRow","deleteText","cancelTooltip","saveTooltip","grouping","toolbar","addRemoveColumns","nRowsSelected","showColumnsTitle","showColumnsAriaLabel","exportTitle","exportAriaLabel","exportName","searchTooltip","searchPlaceholder","pagination","labelDisplayedRows","labelRowsSelect","labelRowsPerPage","firstAriaLabel","firstTooltip","previousAriaLabel","previousTooltip","nextAriaLabel","nextTooltip","lastAriaLabel","lastTooltip","options","sorting","selection","filtering","exportButton","pageSizeOptions","draggable","exportAllData","detailPanel","rowData","marginRight","patch","then","res","saveAdditionalData","defaultValue","data-Id","s","d","u","p","formatData","onRowClick","togglePanel","isLoading","editable","onRowAdd","newData","Promise","resolve","setTimeout","prevState","String","onRowUpdate","oldData","indexOf","t","brandCement","onRowDelete","delete","splice","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","sum","setSum","f","saveData","tmpSum","totalSumTmp","tmpData","tempData","sumTempData","getCompany","c","debt","filename","Date","sortByDate","date","aDate","bDate","fetchDataTable","providerId","dateModified","borderRadius","search","columnsButton","doubleHorizontalScroll","emptyRowsWhenPaging","showEmptyDataSourceMessage","showFirstLastPageButtons","showSelectAllCheckbox","showTextRowsSelected","tableLayout","toLocaleDateString","subTotal4Percent","isAccounting","whoCompany","render","pageSize","paging","isLength","setIsLength","display","appBar","zIndex","drawer","appBar2","top","bottom","flexShrink","drawer2","drawerPaper","drawerPaper2","content","flexGrow","mixins","drRoot","height","listColor","providers","setProviders","setIsUpdate","setDebt","updateTable","dataProviders","dataProviderTmp","CssBaseline","AppBar","position","Toolbar","right","Drawer","paper","List","index","ListItem","button","ListItemIcon","icon","truckIcon","handshakeIcon","dumpTruck","tankerTruck","skullCrossbones","truckFast","ListItemText","primary","paddingLeft","paddingRight","noWrap","anchor","currentProvider","CardCompany","CardProviders","TableProvider","TablePayoff","numberPayoff","setObjects","TabPanel","children","other","role","hidden","Box","a11yProps","palette","background","table","fetchDataCement","getCement","tmpCement","fetchDataProvider","getProvider","tmpProvider","fetchDataObjects","getObjects","tmpObjects","useTheme","setValue","Tabs","newValue","indicatorColor","textColor","Tab","axis","direction","onChangeIndex","dir","DialogAddCement","alert","saveCement","saveProvider","saveObject","token","login","setData","loginHandler","users","password","md5","Grid","container","justify","alignItems","autoComplete","onKeyPress","DrawerMain","ProjectAccountingDrawerMain","DrawerProvider","ProjectAccountingDrawerProvider","DrawerProviderObject","ProjectAccountingDrawerProviderObject","DrawerProviderObjectDetail","ProjectAccountingDrawerProviderObjectDetail","withRouter","exact","path","Settings","Boolean","window","location","hostname","match","app","ReactDOM","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.abec6b2a.chunk.js","sourcesContent":["export default {\r\n    // urlDB: 'https://developcrmapp.firebaseio.com/'\r\n    urlDB: 'https://crmintegralapp.firebaseio.com/'\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport axios from \"axios\";\r\nimport config from \"../../settings/config\";\r\n\r\nexport default props =>  {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = async () => {\r\n        setOpen(false);\r\n        let name = document.querySelector('#nameProvider').value.trim();\r\n        if (name !== undefined && name !== null && name !== '') {\r\n            await axios.post(`${config.urlDB}providers.json`, {name: name, iconType: 'default'});\r\n            props.fetchData();\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <div style={{backgroundColor: '#282c34'}}>\r\n                <IconButton style={{color: '#fff', marginLeft: 130, marginBottom: 10, backgroundColor: '#00CED1'}} aria-label=\"delete\" color=\"default\" onClick={handleClickOpen}>\r\n                    <AddIcon/>\r\n                </IconButton>\r\n            </div>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Наименование поставщика</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"nameProvider\"\r\n                        label=\"Имя\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Отмена\r\n                    </Button>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Сохранить\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","export const numberWithSpaces = (x) => {\r\n    var parts = '';\r\n    if (x.toString().includes(',')) {\r\n        parts = x.toString().split(\",\");\r\n    } else {\r\n        parts = x.toString().split(\".\");\r\n    }\r\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\r\n    if (parts.length === 1) {\r\n        parts.push('00')\r\n    } else if (parts[1].length === 1) {\r\n        parts[1] += 0;\r\n    }\r\n    return parts.join(\",\");\r\n};\r\n\r\nexport const checkMinus = (data) => {\r\n    return data.toString().includes('-')\r\n};\r\n\r\nexport const firstLetterToLowerCase = (str) => str[0].toUpperCase() + str.slice(1);","import React, {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport axios from \"axios\";\r\nimport config from \"./settings/config\";\r\nimport {checkMinus, numberWithSpaces} from \"./settings/fns\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 100,\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n});\r\n\r\nexport default props => {\r\n    const [payoff, setPayoff] = useState([]);\r\n    const [company, setCompany] = useState([]);\r\n    const [companyName, setCompanyName] = useState('');\r\n    const rows = [];\r\n    const companyTmp = [];\r\n\r\n    useEffect(() => {\r\n        fetchDataCompany()\r\n    }, []);\r\n\r\n    function arraySum(array){\r\n        var aoNewGround = 0;\r\n        var oooNewGround = 0;\r\n        var oooIntegral = 0;\r\n        for(var i = 0; i < array.length; i++){\r\n            if (array[i].company === 'aoNewGround') {\r\n                aoNewGround += Number(array[i].payoff);\r\n            }\r\n            if (array[i].company === 'oooNewGround') {\r\n                oooNewGround += Number(array[i].payoff);\r\n            }\r\n            if (array[i].company === 'oooIntegral') {\r\n                oooIntegral += Number(array[i].payoff);\r\n            }\r\n        }\r\n        return {\r\n            aoNewGround: (Math.round(aoNewGround)),\r\n            oooNewGround: (Math.round(oooNewGround)),\r\n            oooIntegral: (Math.round(oooIntegral))\r\n        };\r\n    }\r\n\r\n    async function fetchDataCompany () {\r\n        const dataCompany = await axios.get(`${config.urlDB}/company.json`);\r\n        for (let item in dataCompany.data) {\r\n            companyTmp.push(dataCompany.data[item])\r\n        }\r\n\r\n        const data = await axios.get(`${config.urlDB}payoff.json`);\r\n        for (let item in data.data) {\r\n            if (JSON.parse(localStorage.getItem('currentProvider')) === data.data[item].provider) {\r\n                rows.push({company: data.data[item].company, payoff: data.data[item].payoff});\r\n            }\r\n        }\r\n        setPayoff(arraySum(rows));\r\n\r\n        let tmpName = JSON.parse(localStorage.getItem('provider'));\r\n        tmpName.map(item => {\r\n            if (item[1] === JSON.parse(localStorage.getItem('currentProvider'))) {\r\n                setCompanyName(item[0].name)\r\n            }\r\n        });\r\n\r\n        let tempProvider = [];\r\n        let tmpProvidersCards = [];\r\n        const objects = await axios.get(`${config.urlDB}/objects.json`);\r\n        for (let item in objects.data) {\r\n            if (objects.data[item].provider === JSON.parse(localStorage.getItem('currentProvider'))) {\r\n                tmpProvidersCards.push([objects.data[item].company, objects.data[item].name, item]);\r\n                tempProvider.push([objects.data[item].name, item]);\r\n            }\r\n        }\r\n\r\n        const providersDataPayOff = await axios.get(`${config.urlDB}providersDataPayOff.json`);\r\n        tempProvider.map(value => {\r\n            let subTotal = 0;\r\n            let subTotal2 = 0;\r\n            for (let item in providersDataPayOff.data) {\r\n                if (providersDataPayOff.data[item].object === value[1]) {\r\n                    if (!providersDataPayOff.data[item].comment.toLowerCase().includes('долг')) {\r\n                        subTotal += Number(providersDataPayOff.data[item].subTotal.replace(',', '.').replace(/ /g, ''))\r\n                        if (providersDataPayOff.data[item].delivery) {\r\n                            subTotal += Number(providersDataPayOff.data[item].delivery.replace(',', '.'));\r\n                        }\r\n                        if (providersDataPayOff.data[item].plain) {\r\n                            subTotal += Number(providersDataPayOff.data[item].plain.replace(',', '.'));\r\n                        }\r\n                        if (providersDataPayOff.data[item].underloading) {\r\n                            subTotal += Number(providersDataPayOff.data[item].underloading.replace(',', '.'));\r\n                        }\r\n                    }\r\n                    subTotal2 += Number(providersDataPayOff.data[item].subTotal.replace(',', '.').replace(/ /g, ''))\r\n                    if (providersDataPayOff.data[item].delivery) {\r\n                        subTotal2 += Number(providersDataPayOff.data[item].delivery.replace(',', '.'));\r\n                    }\r\n                    if (providersDataPayOff.data[item].plain) {\r\n                        subTotal2 += Number(providersDataPayOff.data[item].plain.replace(',', '.'));\r\n                    }\r\n                    if (providersDataPayOff.data[item].underloading) {\r\n                        subTotal2 += Number(providersDataPayOff.data[item].underloading.replace(',', '.'));\r\n                    }\r\n                }\r\n            }\r\n            for (let i in tmpProvidersCards) {\r\n                if (tmpProvidersCards[i][2] === value[1]) {\r\n                    tmpProvidersCards[i][2] = subTotal;\r\n                    tmpProvidersCards[i][3] = subTotal2;\r\n                }\r\n            }\r\n        });\r\n\r\n        let tmpCard = {};\r\n        let tmpCard2 = {};\r\n        tmpProvidersCards.map(i => {\r\n            if (tmpCard[i[0]]) {\r\n                tmpCard[i[0]] += i[2];\r\n            } else {\r\n                tmpCard[i[0]] = i[2];\r\n            }\r\n            if (tmpCard2[i[0]]) {\r\n                tmpCard2[i[0]] += i[3];\r\n            } else {\r\n                tmpCard2[i[0]] = i[3];\r\n            }\r\n        });\r\n\r\n        for (let item in companyTmp) {\r\n            companyTmp[item]['total'] = tmpCard[companyTmp[item].title] ?? 0;\r\n            companyTmp[item]['total2'] = tmpCard2[companyTmp[item].title] ?? 0;\r\n        }\r\n        setCompany(companyTmp);\r\n    }\r\n\r\n    if (props.isUpdate) {\r\n        fetchDataCompany();\r\n    }\r\n\r\n    const setCurrentCompany = (title, name) => {\r\n        localStorage.setItem('currentCompany', JSON.stringify(title));\r\n        localStorage.setItem('currentCompanyName', JSON.stringify(name));\r\n    };\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                    {\r\n                        company.map(item => {\r\n                            return(\r\n                                <td style={{width: '100vw'}}>\r\n                                    <Link\r\n                                        to={`/provider/${companyName}/${item.name}`} style={{color: 'rgba(0, 0, 0, 0.87)', textDecoration: 'none'}} onClick={() => {setCurrentCompany(item.title, item.name);}}\r\n                                    >\r\n                                        <Card className={classes.root}>\r\n                                            <CardContent>\r\n                                                <Typography variant=\"h5\" component=\"h2\"><p>{item.name}</p></Typography>\r\n                                                <Typography className={classes.title} color=\"textSecondary\" gutterBottom><b>Взяли</b>: <span style={{color: 'green', fontWeight: 'bold'}}>{numberWithSpaces(item.total)}</span></Typography>\r\n                                                <Typography className={classes.title} color=\"textSecondary\" gutterBottom><b>Долг</b>: <span style={{color: checkMinus(item.total2 - payoff[item.title]) ? 'blue' : 'red', fontWeight: 'bold'}}>{numberWithSpaces(Math.round(item.total2 - payoff[item.title]), 2)}</span></Typography>\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                    </Link>\r\n                                </td>\r\n                            );\r\n                        })\r\n                    }\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport axios from \"axios\";\r\nimport config from \"../../settings/config\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default props =>  {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = async () => {\r\n        setOpen(false);\r\n        let name = document.querySelector('#nameProvider').value.trim();\r\n        if (name !== undefined && name !== null && name !== '') {\r\n            await axios.post(`${config.urlDB}objects.json`, {name: name, provider: JSON.parse(localStorage.getItem('currentProvider')), company: JSON.parse(localStorage.getItem('currentCompany'))});\r\n            props.fetchDataProviderCards();\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <Button onClick={handleClickOpen}>\r\n                <Card className='card'>\r\n                    <div className='cardItem'>\r\n                        <Typography\r\n                            className='title'\r\n                            gutterBottom\r\n                        >\r\n                            <AddIcon style={{fontSize: 100}}/>\r\n                        </Typography>\r\n                    </div>\r\n                </Card>\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Название объекта</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"nameProvider\"\r\n                        label=\"Имя\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Отмена\r\n                    </Button>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Сохранить\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Link} from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport './css/CardProvider.css'\r\nimport DialogCardProviders from \"./UI/Dialog/DialogCardProviders\";\r\nimport axios from \"axios\";\r\nimport config from \"./settings/config\";\r\nimport {inArray, numberWithSpaces} from \"./settings/fns\";\r\n\r\nexport default props => {\r\n    const [provider, setProvider] = useState([]);\r\n    const [company, setCompany] = useState([]);\r\n    const [providerName, setProviderName] = useState([]);\r\n    const [total, setTotal] = useState(0);\r\n    let tmpProvidersCards = [];\r\n    let tempProvider = [];\r\n\r\n    const fetchDataProviderCards = async () => {\r\n        const data = await axios.get(`${config.urlDB}/objects.json`);\r\n        for (let item in data.data) {\r\n            if (data.data[item].provider === JSON.parse(localStorage.getItem('currentProvider')) && data.data[item].company === JSON.parse(localStorage.getItem('currentCompany'))) {\r\n                tmpProvidersCards.push([data.data[item].name]);\r\n                tempProvider.push([data.data[item].name, item]);\r\n            }\r\n        }\r\n        localStorage.setItem('objects', JSON.stringify(tempProvider));\r\n\r\n        const dataCompany = await axios.get(`${config.urlDB}/company.json`);\r\n        for (let item in dataCompany.data) {\r\n            if (dataCompany.data[item].title === JSON.parse(localStorage.getItem('currentCompany'))) {\r\n                setCompany(dataCompany.data[item].name);\r\n            }\r\n        }\r\n\r\n        let tmp = JSON.parse(localStorage.getItem('provider'));\r\n        tmp.map(item => {\r\n            if (item[1] === JSON.parse(localStorage.getItem('currentProvider'))) {\r\n                setProviderName(item[0].name);\r\n            }\r\n        });\r\n\r\n        const providersDataPayOff = await axios.get(`${config.urlDB}providersDataPayOff.json`);\r\n        tempProvider.map(value => {\r\n            let subTotal = 0;\r\n            for (let item in providersDataPayOff.data) {\r\n                if (providersDataPayOff.data[item].object === value[1]) {\r\n                    if (!providersDataPayOff.data[item].comment.toLowerCase().includes('долг')) {\r\n                        subTotal += Number(providersDataPayOff.data[item].subTotal);\r\n                        if (providersDataPayOff.data[item].delivery) {\r\n                            subTotal += Number(providersDataPayOff.data[item].delivery.replace(',', '.'));\r\n                        }\r\n                        if (providersDataPayOff.data[item].plain) {\r\n                            subTotal += Number(providersDataPayOff.data[item].plain.replace(',', '.'));\r\n                        }\r\n                        if (providersDataPayOff.data[item].underloading) {\r\n                            subTotal += Number(providersDataPayOff.data[item].underloading.replace(',', '.'));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            for (let i in tmpProvidersCards) {\r\n                if (tmpProvidersCards[i][0] === value[0]) {\r\n                    tmpProvidersCards[i][1] = subTotal;\r\n                }\r\n            }\r\n\r\n        });\r\n        setProvider(tmpProvidersCards);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchDataProviderCards();\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{marginBottom: 100}}>\r\n            <p>\r\n                {\r\n                    JSON.parse(localStorage.getItem('currentCompanyName')) !== null ? JSON.parse(localStorage.getItem('currentCompanyName')) : null\r\n                }\r\n            </p>\r\n            <DialogCardProviders fetchDataProviderCards={fetchDataProviderCards}/>\r\n            {\r\n                provider.map(item => {\r\n                    return(\r\n                        <Link\r\n                            to={`/provider/${providerName}/${company}/${item[0]}`}\r\n                            key={Math.random()}\r\n                            onClick={() => {\r\n                                localStorage.setItem('currentObject', JSON.stringify(item[0]));\r\n                            }}\r\n                        >\r\n                            <Button>\r\n                                <Card className='card'>\r\n                                    <div className='cardItem'>\r\n                                        <Typography\r\n                                            className='title'\r\n                                            gutterBottom\r\n                                        >\r\n                                            {item[0]}\r\n                                            <Typography className='cardSum' color=\"textSecondary\">\r\n                                                <b>Взяли</b>: <span style={{color: 'green', fontWeight: 'bold'}}>{numberWithSpaces(item[1])}</span>\r\n                                            </Typography>\r\n                                        </Typography>\r\n                                    </div>\r\n                                </Card>\r\n                            </Button>\r\n                        </Link>\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default props => {\r\n    const classes = useStyles();\r\n    const [cement, setCement] = React.useState(props.value);\r\n\r\n    const handleChange = (event) => {\r\n        setCement(event.target.value);\r\n        props.updatedCement(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={cement}\r\n                onChange={handleChange}\r\n            >\r\n                {\r\n                    props.data.map(item => (<MenuItem key={item[0]} value={item[0]}>{item[1]}</MenuItem>))\r\n                }\r\n\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n}\r\n","import React, {forwardRef, useEffect, useState} from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {firstLetterToLowerCase, numberWithSpaces} from \"./settings/fns\";\r\nimport axios from \"axios\";\r\nimport config from \"./settings/config\";\r\nimport Select from './UI/Select/Select';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default () => {\r\n    const [state, setState] = useState({});\r\n    const [providersDataPayOffs, setProvidersDataPayOffs] = useState({});\r\n    const [total, setTotal] = useState(0);\r\n    const [isLoad, setIsLoad] = useState(true);\r\n    const [updateCement, setUpdateCement] = useState('');\r\n\r\n    function sortBy(arr) {\r\n        return arr.sort((a, b) => {\r\n            return a[1] > b[1] ? 1 : -1;\r\n        });\r\n    }\r\n\r\n    function sortByDate(arr) {\r\n        return arr.sort((a, b) => {\r\n            let t = a.period.split('.');\r\n            let aDate = `${t[2]}-${t[1]}-${t[0]}`;\r\n            t = b.period.split('.');\r\n            let bDate = `${t[2]}-${t[1]}-${t[0]}`;\r\n            return new Date(aDate) > new Date(bDate) ? 1 : -1;\r\n        });\r\n    }\r\n\r\n    const summ = () => {\r\n        let volume = document.getElementById('volume').value;\r\n        let price = document.getElementById('pricePerOneTon').value;\r\n        let element = document.querySelector('#subTotal');\r\n        let parent = element.parentElement;\r\n        let newElement = document.createElement('input');\r\n        newElement.id = element.id;\r\n        newElement.style = element.style.cssText;\r\n        newElement.placeholder = element.placeholder;\r\n        if (volume.includes(',')) {\r\n            volume = volume.replace(',', '.').replace(' ', '')\r\n        }\r\n        if (price.includes(',')) {\r\n            price = price.replace(',', '.').replace(' ', '')\r\n        }\r\n        newElement.value = (Number(volume) * Number(price)).toFixed(2);\r\n        document.querySelector('#subTotal').remove();\r\n        parent.append(newElement);\r\n    };\r\n\r\n    const sumErcon = (count, id) => {\r\n        let delivery = document.querySelectorAll('#delivery');\r\n        let underloading = document.querySelectorAll('#underloading');\r\n        let plain = document.querySelectorAll('#plain');\r\n        let countLabel = document.querySelectorAll('#count');\r\n        for (let item of delivery) {\r\n            if (item.dataset.id === id) {\r\n                delivery = Number(item.value);\r\n            }\r\n        }\r\n        for (let item of underloading) {\r\n            if (item.dataset.id === id) {\r\n                underloading = Number(item.value);\r\n            }\r\n        }\r\n        for (let item of plain) {\r\n            if (item.dataset.id === id) {\r\n                plain = Number(item.value);\r\n            }\r\n        }\r\n        if (count.includes(',') || count.includes(' ')) {\r\n            count = Number(count.replace(',', '.').replace(/\\s/ig, ''));\r\n\r\n        }\r\n        for (let item of countLabel) {\r\n            if (item.className === id) {\r\n                let parent = item.parentElement;\r\n                let newElement = document.createElement('label');\r\n                newElement.id = 'count';\r\n                newElement.className = id;\r\n                newElement.textContent = numberWithSpaces(count + delivery + underloading + plain);\r\n                document.querySelector(`.${id}`).remove();\r\n                parent.append(newElement);\r\n            }\r\n        }\r\n    };\r\n\r\n    const saveAdditionalData = (id) => {\r\n        let delivery = document.querySelectorAll('#delivery');\r\n        let underloading = document.querySelectorAll('#underloading');\r\n        let plain = document.querySelectorAll('#plain');\r\n        for (let item of delivery) {\r\n            if (item.dataset.id === id) {\r\n                delivery = item.value.replace(',', '.').replace(/\\s/ig, '');\r\n            }\r\n        }\r\n        for (let item of underloading) {\r\n            if (item.dataset.id === id) {\r\n                underloading = item.value.replace(',', '.').replace(/\\s/ig, '');\r\n            }\r\n        }\r\n        for (let item of plain) {\r\n            if (item.dataset.id === id) {\r\n                plain = item.value.replace(',', '.').replace(/\\s/ig, '');\r\n            }\r\n        }\r\n        axios.patch(`${config.urlDB}providersDataPayOff/${id}.json`, {delivery: delivery, underloading: underloading, plain: plain}).then(res => {\r\n            fetchDictionaryCement();\r\n        });\r\n    };\r\n\r\n    const formatData = (subTotal, delivery, underloading, plain) => {\r\n        let s = 0;\r\n        let d = 0;\r\n        let u = 0;\r\n        let p = 0;\r\n        if (subTotal.includes(',') || subTotal.includes(' ')) {\r\n            s = Number(subTotal.replace(',', '.').replace(/\\s/ig, ''));\r\n        }\r\n        if (delivery !== undefined) {\r\n            d = Number(delivery);\r\n        } else {\r\n            d = 0;\r\n        }\r\n        if (underloading !== undefined) {\r\n            u = Number(underloading);\r\n        } else {\r\n            u = 0;\r\n        }\r\n        if (plain !== undefined) {\r\n            p = Number(plain);\r\n        } else {\r\n            p = 0;\r\n        }\r\n        return numberWithSpaces(s + d + u + p);\r\n    }\r\n\r\n    const fetchDictionaryCement = async (t = null) => {\r\n        const data = await axios.get(`${config.urlDB}dictionaryCement.json`);\r\n        let dataTmpCement = {};\r\n        let dataTmpCement2 = [];\r\n        let dataTmpCement3 = [];\r\n        let dataTmpCement4 = [];\r\n        let providersDataPayOffTmp = [];\r\n        let providersDataPayOffTemp = [];\r\n        let subTotalTmp = 0;\r\n        for (let item in data.data) {\r\n            dataTmpCement2.push([item, data.data[item].name]);\r\n            dataTmpCement3.push([item, data.data[item].name, data.data[item].price]);\r\n        }\r\n\r\n        let tmp = sortBy(dataTmpCement2);\r\n        let tmp2 = sortBy(dataTmpCement3);\r\n\r\n        tmp.map(item => {\r\n            dataTmpCement[item[0]] = item[1];\r\n        });\r\n\r\n        tmp2.map(item => {\r\n            dataTmpCement4[item[0]] = [item[1], item[2]];\r\n        });\r\n\r\n        const updatedCement = (cement) => {\r\n            setUpdateCement(cement);\r\n            // let parent = document.querySelector('#pricePerOneTon').parentElement;\r\n            // let element = document.querySelector('#pricePerOneTon');\r\n            // let newElement = document.createElement('input');\r\n            // newElement.id = element.id;\r\n            // newElement.style = element.style.cssText;\r\n            // newElement.placeholder = element.placeholder;\r\n            // newElement.value = dataTmpCement4[cement][1];\r\n            // document.querySelector('#pricePerOneTon').remove();\r\n            // parent.append(newElement);\r\n            summ();\r\n        };\r\n\r\n        const providersDataPayOff = await axios.get(`${config.urlDB}providersDataPayOff.json`);\r\n        for (let item in providersDataPayOff.data) {\r\n            if (localStorage.getItem('objects')) {\r\n                JSON.parse(localStorage.getItem('objects')).map(value => {\r\n                    if (JSON.parse(localStorage.getItem('currentProvider')) === providersDataPayOff.data[item].provider) {\r\n                        if (value[0] === JSON.parse(localStorage.getItem('currentObject')) && value[1] === providersDataPayOff.data[item].object) {\r\n                            if (!providersDataPayOff.data[item].comment.toLowerCase().includes('долг')) {\r\n                                subTotalTmp += Number(providersDataPayOff.data[item].subTotal.replace(',', '.'));\r\n                                if (providersDataPayOff.data[item].delivery) {\r\n                                    subTotalTmp += Number(providersDataPayOff.data[item].delivery.replace(',', '.'));\r\n                                }\r\n                                if (providersDataPayOff.data[item].plain) {\r\n                                    subTotalTmp += Number(providersDataPayOff.data[item].plain.replace(',', '.'));\r\n                                }\r\n                                if (providersDataPayOff.data[item].underloading) {\r\n                                    subTotalTmp += Number(providersDataPayOff.data[item].underloading.replace(',', '.'));\r\n                                }\r\n                            }\r\n                            providersDataPayOff.data[item].volume = (Number(providersDataPayOff.data[item].volume)  !== 'NaN' && Number(providersDataPayOff.data[item].volume) !== 0) ? numberWithSpaces(providersDataPayOff.data[item].volume.replace(',', '.')) : providersDataPayOff.data[item].volume;\r\n                            providersDataPayOff.data[item].pricePerOneTon = (Number(providersDataPayOff.data[item].pricePerOneTon)  !== 'NaN' && Number(providersDataPayOff.data[item].pricePerOneTon)  !== 0) ? numberWithSpaces(providersDataPayOff.data[item].pricePerOneTon.replace(',', '.')) : providersDataPayOff.data[item].pricePerOneTon;\r\n                            providersDataPayOff.data[item].subTotal = (Number(providersDataPayOff.data[item].subTotal)  !== 'NaN' && Number(providersDataPayOff.data[item].subTotal)  !== 0) ? numberWithSpaces(providersDataPayOff.data[item].subTotal.replace(',', '.')) : providersDataPayOff.data[item].subTotal;\r\n                            providersDataPayOff.data[item].comment = (providersDataPayOff.data[item].comment) ? firstLetterToLowerCase(providersDataPayOff.data[item].comment) : providersDataPayOff.data[item].comment;\r\n                            providersDataPayOff.data[item].id = item;\r\n\r\n                            providersDataPayOffTmp.push({id: item, data: providersDataPayOff.data[item]});\r\n                            providersDataPayOffTemp.push(providersDataPayOff.data[item]);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        // sortByDate(providersDataPayOffTemp);\r\n\r\n        setTotal(subTotalTmp);\r\n        setProvidersDataPayOffs(providersDataPayOffTmp);\r\n\r\n        setState({\r\n            columns: [\r\n                {\r\n                    title: 'Марка цемента / бетона',\r\n                    field: 'brandCement',\r\n                    emptyValue: '',\r\n                    headerStyle: {\r\n                        textAlign: 'center'\r\n                    },\r\n                    cellStyle: {\r\n                        fontSize: 'small',\r\n                        padding: '0px'\r\n                    },\r\n                    lookup: dataTmpCement,\r\n                    editComponent: props => {\r\n                        let tmp = [];\r\n                        for (let item in dataTmpCement) {\r\n                            tmp.push([item, dataTmpCement[item]]);\r\n                        }\r\n                        return(\r\n                            <Select data={tmp} value={props.value} updatedCement={updatedCement}/>\r\n                        )\r\n                    }\r\n                },\r\n                {\r\n                    title: 'Период',\r\n                    field: 'period',\r\n                    emptyValue: '',\r\n                    headerStyle: {\r\n                        textAlign: 'center'\r\n                    },\r\n                    cellStyle: {\r\n                        fontSize: 'small',\r\n                        padding: '0px',\r\n                        textAlign: 'center'\r\n                    }\r\n                },\r\n                {\r\n                    title: 'Объем',\r\n                    field: 'volume',\r\n                    emptyValue: '',\r\n                    headerStyle: {\r\n                        textAlign: 'center'\r\n                    },\r\n                    cellStyle: {\r\n                        fontSize: 'small',\r\n                        padding: '0px',\r\n                        textAlign: 'center'\r\n                    },\r\n                    editComponent: props => (\r\n                        <input\r\n                            type=\"text\"\r\n                            style={{border: 'none', borderBottom: '1px solid #ccc', outline: 'none', marginTop: '5px', paddingBottom: '6px', width: '50px'}}\r\n                            value={props.value}\r\n                            id=\"volume\"\r\n                            placeholder='Объем'\r\n                            onChange={e => {\r\n                                props.onChange(e.target.value);\r\n                                if (e.target.value !== '') {\r\n                                    summ();\r\n                                }\r\n                            }}\r\n                        />\r\n                    )\r\n                },\r\n                {\r\n                    title: 'Цена за 1 тонну',\r\n                    field: 'pricePerOneTon',\r\n                    emptyValue: '',\r\n                    headerStyle: {\r\n                        textAlign: 'center'\r\n                    },\r\n                    cellStyle: {\r\n                        fontSize: 'small',\r\n                        padding: '0px',\r\n                        textAlign: 'center'\r\n                    },\r\n                    editComponent: props => (<input\r\n                        type=\"text\"\r\n                        style={{border: 'none', borderBottom: '1px solid #ccc', outline: 'none', marginTop: '5px', paddingBottom: '6px', width: '100px'}}\r\n                        value={props.value}\r\n                        id={`pricePerOneTon`}\r\n                        placeholder='Цена за 1 тонну'\r\n                        onChange={e => {\r\n                            props.onChange(e.target.value);\r\n                            if (e.target.value !== '') {\r\n                                summ();\r\n                            }\r\n                        }}\r\n                    />)\r\n                },\r\n                {\r\n                    title: 'Итого',\r\n                    field: 'subTotal',\r\n                    emptyValue: '',\r\n                    headerStyle: {\r\n                        textAlign: 'center'\r\n                    },\r\n                    cellStyle: {\r\n                        fontSize: 'small',\r\n                        padding: '0px',\r\n                        textAlign: 'center'\r\n                    },\r\n                    editComponent: props => (\r\n                        <input\r\n                            type=\"text\"\r\n                            style={{border: 'none', borderBottom: '1px solid #ccc', outline: 'none', marginTop: '5px', paddingBottom: '6px', width: '150px'}}\r\n                            value={props.value}\r\n                            id=\"subTotal\"\r\n                            placeholder='Итого'\r\n                            onChange={e => {\r\n                                props.onChange(e.target.value)\r\n                            }}\r\n                        />\r\n                    )\r\n                },\r\n                {\r\n                    title: 'Доки',\r\n                    field: 'availabilityOfDocuments',\r\n                    emptyValue: '',\r\n                    headerStyle: {\r\n                        textAlign: 'center'\r\n                    },\r\n                    cellStyle: {\r\n                        fontSize: 'small',\r\n                        padding: '0px',\r\n                        textAlign: 'center'\r\n                    },\r\n                    lookup: {\r\n                        1: 'Скан',\r\n                        2: 'Оригинал',\r\n                        3: 'Нет'\r\n                    }\r\n                },\r\n                {\r\n                    title: 'Комментарий',\r\n                    emptyValue: '',\r\n                    headerStyle: {\r\n                        textAlign: 'center'\r\n                    },\r\n                    field: 'comment',\r\n                    cellStyle: comment => {\r\n                        return comment !== undefined && comment !== null && comment !== '' && comment.toString().toLowerCase().includes('данные не') ? {color: 'red', fontSize: 'small', padding: '10px 10px 10px 0'} : {fontSize: 'small', padding: '10px 10px 10px 0'};\r\n                    }\r\n                },\r\n            ],\r\n            data: providersDataPayOffTemp\r\n        });\r\n        setIsLoad(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchDictionaryCement();\r\n    }, []);\r\n\r\n    const tableIcons = {\r\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n        SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n    };\r\n\r\n    return (\r\n        <div style={{paddingBottom: 60}}>\r\n            <MaterialTable\r\n                icons={tableIcons}\r\n                localization={{\r\n                    header: {\r\n                        actions: 'Действия',\r\n                    },\r\n                    body: {\r\n                        emptyDataSourceMessage: 'Пока что нет новых записей',\r\n                        filterRow: {\r\n                            filterTooltip: 'Фильтр'\r\n                        },\r\n                        addTooltip: 'Добавить',\r\n                        deleteTooltip: 'Удалить',\r\n                        editTooltip: 'Редактировать',\r\n                        editRow: {\r\n                            deleteText: 'Вы действительно хотите удалить эту запись?',\r\n                            cancelTooltip: 'Отмена',\r\n                            saveTooltip: 'Сохранить'\r\n                        }\r\n                    },\r\n                    grouping: {\r\n                        placeholder: 'Перетащите заголовок...'\r\n                    },\r\n                    toolbar: {\r\n                        addRemoveColumns: 'Добавление и удаление столбцов',\r\n                        nRowsSelected: '{0} запись(ей) выбрано',\r\n                        showColumnsTitle: 'Показать столбцы',\r\n                        showColumnsAriaLabel: 'Показать столбцы',\r\n                        exportTitle: 'Экспорт',\r\n                        exportAriaLabel: 'Экспорт',\r\n                        exportName: 'Экспорт в формате CSV',\r\n                        searchTooltip: 'Поиск',\r\n                        searchPlaceholder: 'Поиск',\r\n                    },\r\n                    pagination: {\r\n                        labelDisplayedRows: '{from}-{to} из {count}',\r\n                        labelRowsSelect: 'строк',\r\n                        labelRowsPerPage: 'Строк на странице:',\r\n                        firstAriaLabel: 'Первая страница',\r\n                        firstTooltip: 'Первая страница',\r\n                        previousAriaLabel: 'Предыдущая страница',\r\n                        previousTooltip: 'Предыдущая страница',\r\n                        nextAriaLabel: 'Следующая страница',\r\n                        nextTooltip: 'Следующая страница',\r\n                        lastAriaLabel: 'Последняя полоса',\r\n                        lastTooltip: 'Последняя полоса',\r\n                    },\r\n                }}\r\n                title={JSON.parse(localStorage.getItem('currentObject'))}\r\n                columns={state.columns}\r\n                data={state.data}\r\n                options={{\r\n                    sorting: false,\r\n                    selection: false,\r\n                    grouping: false,\r\n                    filtering: false,\r\n                    exportButton: true,\r\n                    pageSizeOptions: [5],\r\n                    draggable: false,\r\n                    exportAllData: true,\r\n                }}\r\n                detailPanel={rowData => {\r\n                    if (JSON.parse(localStorage.getItem('currentProvider')) === '-M3ytpeFI7Cry9gqb6c9') {\r\n                        return (\r\n                            <div style={{width: '800px', margin: '10px auto'}}>\r\n                                <Button style={{marginRight: 15}} variant=\"contained\" onClick={() => saveAdditionalData(rowData.id)}>Сохранить</Button>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    style={{border: 'none', borderBottom: '1px solid #ccc', outline: 'none', marginTop: '5px', paddingBottom: '6px', width: '150px', marginRight: '10px'}}\r\n                                    defaultValue={rowData.delivery ? numberWithSpaces(rowData.delivery) : ''}\r\n                                    id=\"delivery\"\r\n                                    placeholder='Доставка'\r\n                                    data-Id={rowData.id}\r\n                                    onChange={() => sumErcon(rowData.subTotal, rowData.id)}\r\n                                />\r\n                                <input\r\n                                    type=\"text\"\r\n                                    style={{border: 'none', borderBottom: '1px solid #ccc', outline: 'none', marginTop: '5px', paddingBottom: '6px', width: '150px', marginRight: '10px'}}\r\n                                    defaultValue={rowData.underloading ? numberWithSpaces(rowData.underloading) : ''}\r\n                                    id=\"underloading\"\r\n                                    placeholder='Недогруз'\r\n                                    data-Id={rowData.id}\r\n                                    onChange={() => sumErcon(rowData.subTotal, rowData.id)}\r\n                                />\r\n                                <input\r\n                                    type=\"text\"\r\n                                    style={{border: 'none', borderBottom: '1px solid #ccc', outline: 'none', marginTop: '5px', paddingBottom: '6px', width: '150px', marginRight: '20px'}}\r\n                                    defaultValue={rowData.plain ? numberWithSpaces(rowData.plain) : ''}\r\n                                    id=\"plain\"\r\n                                    placeholder='Простой'\r\n                                    data-Id={rowData.id}\r\n                                    onChange={() => sumErcon(rowData.subTotal, rowData.id)}\r\n                                />\r\n                                <span>\r\n                                    <label>Итого: </label>\r\n                                    <label id='count' className={rowData.id}>\r\n                                        {\r\n                                            formatData(rowData.subTotal, rowData.delivery, rowData.underloading, rowData.plain)\r\n                                        }\r\n                                    </label>\r\n                                </span>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }}\r\n                onRowClick={(event, rowData, togglePanel) => {\r\n                    if (JSON.parse(localStorage.getItem('currentProvider')) === '-M3ytpeFI7Cry9gqb6c9') {\r\n                        togglePanel();\r\n                    }\r\n                }}\r\n                isLoading={isLoad}\r\n                editable={{\r\n                    onRowAdd: (newData) =>\r\n                        new Promise((resolve) => {\r\n                            setTimeout(() => {\r\n                                resolve();\r\n                                setState((prevState) => {\r\n                                    const data = [...prevState.data];\r\n                                    if (localStorage.getItem('objects')) {\r\n                                        JSON.parse(localStorage.getItem('objects')).map(item => {\r\n                                            if (item[0] === JSON.parse(localStorage.getItem('currentObject'))) {\r\n                                                if (newData['availabilityOfDocuments'] === undefined) {\r\n                                                    newData['availabilityOfDocuments'] = '';\r\n                                                }\r\n                                                if (newData['brandCement'] === undefined) {\r\n                                                    newData['brandCement'] = '';\r\n                                                }\r\n                                                if (newData['comment'] === undefined) {\r\n                                                    newData['comment'] = '';\r\n                                                }\r\n                                                if (newData['pricePerOneTon'] === undefined) {\r\n                                                    newData['pricePerOneTon'] = '';\r\n                                                }\r\n                                                if (newData['volume'] === undefined) {\r\n                                                    newData['volume'] = '';\r\n                                                }\r\n                                                newData['isAccounting'] = false;\r\n                                                newData['delivery'] = '';\r\n                                                newData['plain'] = '';\r\n                                                newData['underloading'] = '';\r\n                                                newData['whoCompany'] = '';\r\n                                                newData['brandCement'] = updateCement;\r\n                                                newData['volume'] = (String(newData['volume']).includes(',') || String(newData['volume']).includes(' ')) ? newData['volume'].replace(',', '.').replace(/ /g, '') : newData['volume'];\r\n                                                newData['pricePerOneTon'] = (document.getElementById('pricePerOneTon').value.includes(',') || document.getElementById('pricePerOneTon').value.includes(' ')) ? newData['pricePerOneTon'].replace(',', '.').replace(/ /g, '') : document.getElementById('pricePerOneTon').value;\r\n                                                newData['subTotal'] = (document.getElementById('subTotal').value.includes(',') || document.getElementById('subTotal').value.includes(' ')) ? document.getElementById('subTotal').value.replace(',', '.').replace(/ /g, '') : document.getElementById('subTotal').value;\r\n                                                newData['object'] = item[1];\r\n                                                newData['provider'] = JSON.parse(localStorage.getItem('currentProvider'));\r\n                                                axios.post(`${config.urlDB}providersDataPayOff.json`, newData).then(res => {\r\n                                                    fetchDictionaryCement();\r\n                                                });\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    data.push(newData);\r\n                                    return { ...prevState, data };\r\n                                });\r\n                            }, 600);\r\n                        }),\r\n                    onRowUpdate: (newData, oldData) =>\r\n                        new Promise((resolve) => {\r\n                            setTimeout(() => {\r\n                                resolve();\r\n                                if (oldData) {\r\n                                    setState((prevState) => {\r\n                                        const data = [...prevState.data];\r\n                                        providersDataPayOffs.map(item => {\r\n                                            if (item.data === data[data.indexOf(oldData)]) {\r\n                                                let t = {};\r\n                                                if (String(newData['volume']).includes(',') || String(newData['volume']).includes(' ')) {\r\n                                                    newData['volume'] = newData['volume'].replace(',', '.').replace(/ /g, '');\r\n                                                }\r\n\r\n                                                if (document.getElementById('pricePerOneTon').value !== '' || document.getElementById('pricePerOneTon').value.includes(',') || document.getElementById('pricePerOneTon').value.includes(' ')) {\r\n                                                    newData['pricePerOneTon'] = document.getElementById('pricePerOneTon').value.replace(',', '.').replace(/ /g, '');\r\n                                                }\r\n                                                if (document.getElementById('subTotal').value !== '' || document.getElementById('subTotal').value.includes(',') || document.getElementById('subTotal').value.includes(' ')) {\r\n                                                    newData['subTotal'] = document.getElementById('subTotal').value.replace(',', '.').replace(/ /g, '');\r\n                                                }\r\n\r\n                                                newData['brandCement'] = (updateCement !== '') ? updateCement : oldData.brandCement;\r\n                                                newData['whoCompany'] = '';\r\n                                                newData['isAccounting'] = false;\r\n                                                newData['delivery'] = oldData.delivery ?? '';\r\n                                                newData['plain'] = oldData.plain ?? '';\r\n                                                newData['underloading'] = oldData.underloading ?? '';\r\n                                                t[item.id] = newData;\r\n                                                axios.patch(`${config.urlDB}providersDataPayOff.json`, {...t}).then(res => {\r\n                                                    fetchDictionaryCement();\r\n                                                });\r\n                                            }\r\n                                        });\r\n                                        data[data.indexOf(oldData)] = newData;\r\n                                        return { ...prevState, data };\r\n                                    });\r\n                                }\r\n                            }, 600);\r\n                        }),\r\n                    onRowDelete: (oldData) =>\r\n                        new Promise((resolve) => {\r\n                            setTimeout(() => {\r\n                                resolve();\r\n                                setState((prevState) => {\r\n                                    const data = [...prevState.data];\r\n                                    providersDataPayOffs.map(item => {\r\n                                        if (item.data === data[data.indexOf(oldData)]) {\r\n                                            axios.delete(`${config.urlDB}providersDataPayOff/${item.id}.json`).then(res => {\r\n                                                fetchDictionaryCement();\r\n                                            });\r\n                                        }\r\n                                    });\r\n                                    data.splice(data.indexOf(oldData), 1);\r\n                                    return { ...prevState, data };\r\n                                });\r\n                            }, 600);\r\n                        }),\r\n                }}\r\n            />\r\n            <p>Итого: {numberWithSpaces(total)}</p>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport config from \"./settings/config\";\r\nimport ReactExport from \"react-export-excel\";\r\nimport SaveAltIcon from \"@material-ui/icons/SaveAlt\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {numberWithSpaces} from \"./settings/fns\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nexport default props => {\r\n    const [sum, setSum] = useState([]);\r\n    const rows = [];\r\n    const companyTmp = [];\r\n\r\n    function arraySum(array, f = true){\r\n        var aoNewGround = 0;\r\n        var oooNewGround = 0;\r\n        var oooIntegral = 0;\r\n        for(var i = 0; i < array.length; i++){\r\n            if (f) {\r\n                if (array[i][0] === 'aoNewGround') {\r\n                    aoNewGround += Number(array[i][1]);\r\n                }\r\n                if (array[i][0] === 'oooNewGround') {\r\n                    oooNewGround += Number(array[i][1]);\r\n                }\r\n                if (array[i][0] === 'oooIntegral') {\r\n                    oooIntegral += Number(array[i][1]);\r\n                }\r\n            } else {\r\n                if (array[i][0] === 'aoNewGround') {\r\n                    aoNewGround += Number(array[i][1]) + Number(array[i][2]) + Number(array[i][3]) + Number(array[i][4]);\r\n                }\r\n                if (array[i][0] === 'oooNewGround') {\r\n                    oooNewGround += Number(array[i][1]) + Number(array[i][2]) + Number(array[i][3]) + Number(array[i][4]);\r\n                }\r\n                if (array[i][0] === 'oooIntegral') {\r\n                    oooIntegral += Number(array[i][1]) + Number(array[i][2]) + Number(array[i][3]) + Number(array[i][4]);\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            aoNewGround: aoNewGround,\r\n            oooNewGround: oooNewGround,\r\n            oooIntegral: oooIntegral\r\n        };\r\n    }\r\n\r\n    const saveData = async x => {\r\n        const dataCompany = await axios.get(`${config.urlDB}/company.json`);\r\n        for (let item in dataCompany.data) {\r\n            companyTmp.push(dataCompany.data[item])\r\n        }\r\n\r\n        const data = await axios.get(`${config.urlDB}payoff.json`);\r\n        JSON.parse(localStorage.getItem('provider')).map(i => {\r\n            for (let item in data.data) {\r\n                if (i[1] === data.data[item].provider) {\r\n                    rows.push({company: data.data[item].company, payoff: Number(data.data[item].payoff), provider: i[0].name});\r\n                }\r\n            }\r\n        });\r\n\r\n        let tmpSum = {};\r\n        let totalSumTmp = [];\r\n        let tmp = [];\r\n        rows.map(item => {\r\n            if (tmpSum[item.provider]) {\r\n                tmpSum[item.provider].push([item.company, item.payoff]);\r\n            } else {\r\n                tmpSum[item.provider] = [[item.company, item.payoff]];\r\n            }\r\n        });\r\n\r\n        for (let item in tmpSum) {\r\n            totalSumTmp[item] = arraySum(tmpSum[item]);\r\n        }\r\n\r\n\r\n        let tmpData = [];\r\n        let tempData = [];\r\n        let sumTempData = [];\r\n        const providersDataPayOff = await axios.get(`${config.urlDB}providersDataPayOff.json`);\r\n        const getCompany = await axios.get(`${config.urlDB}objects.json`);\r\n        for (let item in providersDataPayOff.data) {\r\n            JSON.parse(localStorage.getItem('provider')).map(i => {\r\n                if (i[1] === providersDataPayOff.data[item].provider) {\r\n                    for (let company in getCompany.data) {\r\n                        if (company === providersDataPayOff.data[item].object) {\r\n                            tmpData.push({\r\n                                provider: i[0].name,\r\n                                subTotal: providersDataPayOff.data[item].subTotal,\r\n                                company: getCompany.data[company].company,\r\n                                delivery: providersDataPayOff.data[item].delivery,\r\n                                plain: providersDataPayOff.data[item].plain,\r\n                                underloading: providersDataPayOff.data[item].underloading,\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        tmpData.map(item => {\r\n            if (tempData[item.provider]) {\r\n                tempData[item.provider].push([item.company, item.subTotal, item.delivery ?? 0, item.plain ?? 0, item.underloading ?? 0]);\r\n            } else {\r\n                tempData[item.provider] = [[item.company, item.subTotal, item.delivery ?? 0, item.plain ?? 0, item.underloading ?? 0]];\r\n            }\r\n        });\r\n\r\n        for (let item in tempData) {\r\n            sumTempData[item] = arraySum(tempData[item], false);\r\n        }\r\n\r\n        for (let item in sumTempData) {\r\n            for (let i in sumTempData[item]) {\r\n                companyTmp.map(c => {\r\n                    if (c.title === i) {\r\n                        tmp.push({\r\n                            provider: item,\r\n                            company: c.name,\r\n                            debt: numberWithSpaces(\r\n                                Math.round(\r\n                                    Number(sumTempData[item] !== undefined ? sumTempData[item][i] : 0) -\r\n                                    Number(totalSumTmp[item] !== undefined ? totalSumTmp[item][i] : 0),\r\n                                    2\r\n                                )\r\n                            )\r\n                        })\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        setSum(tmp);\r\n    };\r\n\r\n    return(\r\n        <ExcelFile filename={`Отчет по всем объектам ${new Date()}`} element={<Button style={{color: '#fff'}} onClick={saveData} title='Скачать отчет'><SaveAltIcon /></Button>}>\r\n            <ExcelSheet data={sum.length !== 0 ? sum : saveData()} name=\"Debt Provider\">\r\n                <ExcelColumn label=\"Поставщик\" value=\"provider\"/>\r\n                <ExcelColumn label=\"Компания\" value=\"company\"/>\r\n                <ExcelColumn label=\"Долг\" value=\"debt\"/>\r\n            </ExcelSheet>\r\n        </ExcelFile>\r\n    );\r\n}","import React, {forwardRef, useEffect, useState} from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {firstLetterToLowerCase, numberWithSpaces} from \"../settings/fns\";\r\nimport axios from 'axios';\r\nimport config from \"../settings/config\";\r\n\r\nexport default props => {\r\n    const [state, setState] = React.useState({});\r\n    const [providersDataPayOffs, setProvidersDataPayOffs] = React.useState({});\r\n    const [total, setTotal] = React.useState(0);\r\n    const [isLoad, setIsLoad] = React.useState(true);\r\n\r\n    const [payoff, setPayoff] = useState([]);\r\n    const rows = [];\r\n\r\n    useEffect(() => {\r\n        fetchDataTable()\r\n    }, []);\r\n\r\n    function sortByDate(arr) {\r\n        return arr.sort((a, b) => {\r\n            let t = a.date.split('.');\r\n            let aDate = `${t[2]}-${t[1]}-${t[0]}`;\r\n            t = b.date.split('.');\r\n            let bDate = `${t[2]}-${t[1]}-${t[0]}`;\r\n            return new Date(aDate) < new Date(bDate) ? 1 : -1;\r\n        });\r\n    }\r\n\r\n    async function fetchDataTable () {\r\n        const data = await axios.get(`${config.urlDB}payoff.json`);\r\n        for (let item in data.data) {\r\n            data.data[item].payoff = (Number(data.data[item].payoff) !== 'NaN') ? numberWithSpaces(data.data[item].payoff) : data.data[item].payoff;\r\n            if (data.data[item].company === props.company && data.data[item].provider === props.providerId) {\r\n                let dateModified = data.data[item].date.split('.');\r\n                rows.push({\r\n                    id: item,\r\n                    date: `${dateModified[2]}-${dateModified[1]}-${dateModified[0]}`,\r\n                    payoff: data.data[item].payoff,\r\n                    company: data.data[item].company,\r\n                    provider: data.data[item].provider\r\n                })\r\n            }\r\n        }\r\n\r\n        sortByDate(rows);\r\n\r\n        setState({\r\n            columns: [\r\n                {\r\n                    title: 'Дата оплаты',\r\n                    field: 'date',\r\n                    emptyValue: '',\r\n                    type: 'date',\r\n                    cellStyle: {\r\n                        fontSize: 'small',\r\n                        padding: '0px'\r\n                    },\r\n                },\r\n                {\r\n                    title: 'Сумма',\r\n                    field: 'payoff',\r\n                    emptyValue: '',\r\n                    cellStyle: {\r\n                        fontSize: 'small',\r\n                        padding: '0px',\r\n                        textAlign: 'center'\r\n                    }\r\n                },\r\n            ],\r\n            data: rows\r\n        });\r\n        setIsLoad(false);\r\n        setPayoff(rows);\r\n    }\r\n\r\n    if (props.isUpdate) {\r\n        fetchDataTable();\r\n    }\r\n\r\n    const tableIcons = {\r\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n        SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n    };\r\n\r\n    return (\r\n            <MaterialTable\r\n                style={{borderRadius: 0}}\r\n                icons={tableIcons}\r\n                localization={{\r\n                    header: {\r\n                        actions: 'Действия',\r\n                    },\r\n                    body: {\r\n                        emptyDataSourceMessage: 'Пока что нет новых записей',\r\n                        filterRow: {\r\n                            filterTooltip: 'Фильтр'\r\n                        },\r\n                        addTooltip: 'Добавить',\r\n                        deleteTooltip: 'Удалить',\r\n                        editTooltip: 'Редактировать',\r\n                        editRow: {\r\n                            deleteText: 'Вы действительно хотите удалить эту запись?',\r\n                            cancelTooltip: 'Отмена',\r\n                            saveTooltip: 'Сохранить'\r\n                        }\r\n                    },\r\n                    grouping: {\r\n                        placeholder: 'Перетащите заголовок...'\r\n                    },\r\n                    toolbar: {\r\n                        addRemoveColumns: 'Добавление и удаление столбцов',\r\n                        nRowsSelected: '{0} запись(ей) выбрано',\r\n                        showColumnsTitle: 'Показать столбцы',\r\n                        showColumnsAriaLabel: 'Показать столбцы',\r\n                        exportTitle: 'Экспорт',\r\n                        exportAriaLabel: 'Экспорт',\r\n                        exportName: 'Экспорт в формате CSV',\r\n                        searchTooltip: 'Поиск',\r\n                        searchPlaceholder: 'Поиск',\r\n                    },\r\n                    pagination: {\r\n                        labelDisplayedRows: '{from}-{to} из {count}',\r\n                        labelRowsSelect: 'строк',\r\n                        labelRowsPerPage: 'Строк на странице:',\r\n                        firstAriaLabel: 'Первая страница',\r\n                        firstTooltip: 'Первая страница',\r\n                        previousAriaLabel: 'Предыдущая страница',\r\n                        previousTooltip: 'Предыдущая страница',\r\n                        nextAriaLabel: 'Следующая страница',\r\n                        nextTooltip: 'Следующая страница',\r\n                        lastAriaLabel: 'Последняя полоса',\r\n                        lastTooltip: 'Последняя полоса',\r\n                    },\r\n                }}\r\n                title={props.companyName}\r\n                columns={state.columns}\r\n                data={state.data}\r\n                options={{\r\n                    sorting: false,\r\n                    selection: false,\r\n                    grouping: false,\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    pageSizeOptions: [5],\r\n                    draggable: false,\r\n                    search: false,\r\n                    columnsButton: false,\r\n                    doubleHorizontalScroll: false,\r\n                    emptyRowsWhenPaging: false,\r\n                    exportAllData: false,\r\n                    header: true,\r\n                    showEmptyDataSourceMessage: false,\r\n                    showFirstLastPageButtons: false,\r\n                    showSelectAllCheckbox: false,\r\n                    showTextRowsSelected: false,\r\n                    tableLayout: 'fixed',\r\n                }}\r\n                isLoading={isLoad}\r\n                editable={{\r\n                    onRowAdd: (newData) =>\r\n                        new Promise((resolve) => {\r\n                            setTimeout(() => {\r\n                                resolve();\r\n                                setState((prevState) => {\r\n                                    const data = [...prevState.data];\r\n                                    newData['payoff'] = newData['payoff'].replace(',', '.').replace(/ /g, '');\r\n                                    data.push(newData);\r\n                                    axios.post(`${config.urlDB}payoff.json`, {date: new Date(newData.date).toLocaleDateString(), payoff: newData.payoff, company: props.company, provider: props.providerId}).then(res => {\r\n                                        fetchDataTable();\r\n                                    });\r\n                                    return { ...prevState, data };\r\n                                });\r\n                            }, 600);\r\n                        }),\r\n                    onRowUpdate: (newData, oldData) =>\r\n                        new Promise((resolve) => {\r\n                            setTimeout(() => {\r\n                                resolve();\r\n                                if (oldData) {\r\n                                    setState((prevState) => {\r\n                                        const data = [...prevState.data];\r\n                                        let t = {};\r\n                                        newData['payoff'] = newData['payoff'].replace(',', '.').replace(/ /g, '');\r\n                                        t[oldData.id] = {date: new Date(newData.date).toLocaleDateString(), payoff: newData.payoff, company: props.company, provider: props.providerId};\r\n                                        axios.patch(`${config.urlDB}payoff.json`, {...t}).then(res => {\r\n                                            fetchDataTable();\r\n                                        });\r\n                                        data[data.indexOf(oldData)] = newData;\r\n                                        return { ...prevState, data };\r\n                                    });\r\n                                }\r\n                            }, 600);\r\n                        }),\r\n                    onRowDelete: (oldData) =>\r\n                        new Promise((resolve) => {\r\n                            setTimeout(() => {\r\n                                resolve();\r\n                                setState((prevState) => {\r\n                                    const data = [...prevState.data];\r\n                                    axios.delete(`${config.urlDB}payoff/${oldData.id}.json`).then(res => {\r\n                                        fetchDataTable();\r\n                                    });\r\n                                    data.splice(data.indexOf(oldData), 1);\r\n                                    return { ...prevState, data };\r\n                                });\r\n                            }, 600);\r\n                        }),\r\n                }}\r\n            />\r\n    );\r\n}\r\n","export default {\r\n    // urlDB: 'https://developcrmapp.firebaseio.com/'\r\n    urlDB: 'https://crmintegralapp.firebaseio.com/'\r\n}","export const numberWithSpaces = (x) => {\r\n    var parts = '';\r\n    if (x.toString().includes(',')) {\r\n        parts = x.toString().split(\",\");\r\n    } else {\r\n        parts = x.toString().split(\".\");\r\n    }\r\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\r\n    if (parts.length === 1) {\r\n        parts.push('00')\r\n    } else if (parts[1].length === 1) {\r\n        parts[1] += 0;\r\n    }\r\n    return parts.join(\",\");\r\n};\r\n\r\nexport const checkMinus = (data) => {\r\n    return data.toString().includes('-')\r\n};\r\n\r\nexport const firstLetterToLowerCase = (str) => str[0].toUpperCase() + str.slice(1);","import React, {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport axios from \"axios\";\r\nimport config from \"./settings/config\";\r\nimport {checkMinus, numberWithSpaces} from \"./settings/fns\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 100,\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n});\r\n\r\nexport default props => {\r\n    const [payoff, setPayoff] = useState([]);\r\n    const [company, setCompany] = useState([]);\r\n    const [companyName, setCompanyName] = useState('');\r\n    const rows = [];\r\n    const companyTmp = [];\r\n\r\n    useEffect(() => {\r\n        fetchDataCompany()\r\n    }, []);\r\n\r\n    function arraySum(array){\r\n        var aoNewGround = 0;\r\n        var oooNewGround = 0;\r\n        var oooIntegral = 0;\r\n        for(var i = 0; i < array.length; i++){\r\n            if (array[i].company === 'aoNewGround') {\r\n                aoNewGround += Number(array[i].payoff);\r\n            }\r\n            if (array[i].company === 'oooNewGround') {\r\n                oooNewGround += Number(array[i].payoff);\r\n            }\r\n            if (array[i].company === 'oooIntegral') {\r\n                oooIntegral += Number(array[i].payoff);\r\n            }\r\n        }\r\n        return {\r\n            aoNewGround: (Math.round(aoNewGround)),\r\n            oooNewGround: (Math.round(oooNewGround)),\r\n            oooIntegral: (Math.round(oooIntegral))\r\n        };\r\n    }\r\n\r\n    async function fetchDataCompany () {\r\n        const dataCompany = await axios.get(`${config.urlDB}/company.json`);\r\n        for (let item in dataCompany.data) {\r\n            companyTmp.push(dataCompany.data[item])\r\n        }\r\n\r\n        const data = await axios.get(`${config.urlDB}payoff.json`);\r\n        for (let item in data.data) {\r\n            if (JSON.parse(localStorage.getItem('currentProvider')) === data.data[item].provider) {\r\n                rows.push({company: data.data[item].company, payoff: data.data[item].payoff});\r\n            }\r\n        }\r\n        setPayoff(arraySum(rows));\r\n\r\n        let tmpName = JSON.parse(localStorage.getItem('provider'));\r\n        tmpName.map(item => {\r\n            if (item[1] === JSON.parse(localStorage.getItem('currentProvider'))) {\r\n                setCompanyName(item[0].name)\r\n            }\r\n        });\r\n\r\n        let tempProvider = [];\r\n        let tmpProvidersCards = [];\r\n        const objects = await axios.get(`${config.urlDB}/objects.json`);\r\n        for (let item in objects.data) {\r\n            if (objects.data[item].provider === JSON.parse(localStorage.getItem('currentProvider'))) {\r\n                tmpProvidersCards.push([objects.data[item].company, objects.data[item].name, item]);\r\n                tempProvider.push([objects.data[item].name, item]);\r\n            }\r\n        }\r\n\r\n        const providersDataPayOff = await axios.get(`${config.urlDB}providersDataPayOff.json`);\r\n        tempProvider.map(value => {\r\n            let subTotal = 0;\r\n            let subTotal2 = 0;\r\n            for (let item in providersDataPayOff.data) {\r\n                if (providersDataPayOff.data[item].object === value[1]) {\r\n                    if (!providersDataPayOff.data[item].comment.toLowerCase().includes('долг')) {\r\n                        subTotal += Number(providersDataPayOff.data[item].subTotal.replace(',', '.').replace(/ /g, ''));\r\n                        if (providersDataPayOff.data[item].delivery) {\r\n                            subTotal += Number(providersDataPayOff.data[item].delivery.replace(',', '.'));\r\n                        }\r\n                        if (providersDataPayOff.data[item].plain) {\r\n                            subTotal += Number(providersDataPayOff.data[item].plain.replace(',', '.'));\r\n                        }\r\n                        if (providersDataPayOff.data[item].underloading) {\r\n                            subTotal += Number(providersDataPayOff.data[item].underloading.replace(',', '.'));\r\n                        }\r\n                    }\r\n                    subTotal2 += Number(providersDataPayOff.data[item].subTotal.replace(',', '.').replace(/ /g, ''));\r\n                    if (providersDataPayOff.data[item].delivery) {\r\n                        subTotal2 += Number(providersDataPayOff.data[item].delivery.replace(',', '.'));\r\n                    }\r\n                    if (providersDataPayOff.data[item].plain) {\r\n                        subTotal2 += Number(providersDataPayOff.data[item].plain.replace(',', '.'));\r\n                    }\r\n                    if (providersDataPayOff.data[item].underloading) {\r\n                        subTotal2 += Number(providersDataPayOff.data[item].underloading.replace(',', '.'));\r\n                    }\r\n                }\r\n            }\r\n            for (let i in tmpProvidersCards) {\r\n                if (tmpProvidersCards[i][2] === value[1]) {\r\n                    tmpProvidersCards[i][2] = subTotal;\r\n                    tmpProvidersCards[i][3] = subTotal2;\r\n                }\r\n            }\r\n        });\r\n\r\n        let tmpCard = {};\r\n        let tmpCard2 = {};\r\n        tmpProvidersCards.map(i => {\r\n            if (tmpCard[i[0]]) {\r\n                tmpCard[i[0]] += i[2];\r\n            } else {\r\n                tmpCard[i[0]] = i[2];\r\n            }\r\n            if (tmpCard2[i[0]]) {\r\n                tmpCard2[i[0]] += i[3];\r\n            } else {\r\n                tmpCard2[i[0]] = i[3];\r\n            }\r\n        });\r\n\r\n        for (let item in companyTmp) {\r\n            companyTmp[item]['total'] = tmpCard[companyTmp[item].title] ?? 0;\r\n            companyTmp[item]['total2'] = tmpCard2[companyTmp[item].title] ?? 0;\r\n        }\r\n        setCompany(companyTmp);\r\n    }\r\n\r\n    if (props.isUpdate) {\r\n        fetchDataCompany();\r\n    }\r\n\r\n    const setCurrentCompany = (title, name) => {\r\n        localStorage.setItem('currentCompany', JSON.stringify(title));\r\n        localStorage.setItem('currentCompanyName', JSON.stringify(name));\r\n    };\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                    {\r\n                        company.map(item => {\r\n                            return(\r\n                                <td style={{width: '100vw'}}>\r\n                                    <Link\r\n                                        to={`/projectAccounting/provider/${companyName}/${item.name}`} style={{color: 'rgba(0, 0, 0, 0.87)', textDecoration: 'none'}} onClick={() => {setCurrentCompany(item.title, item.name);}}\r\n                                    >\r\n                                        <Card className={classes.root}>\r\n                                            <CardContent>\r\n                                                <Typography variant=\"h5\" component=\"h2\"><p>{item.name}</p></Typography>\r\n                                                <Typography className={classes.title} color=\"textSecondary\" gutterBottom><b>Взяли</b>: <span style={{color: 'green', fontWeight: 'bold'}}>{numberWithSpaces(item.total)}</span></Typography>\r\n                                                <Typography className={classes.title} color=\"textSecondary\" gutterBottom><b>Долг</b>: <span style={{color: checkMinus(item.total2 - payoff[item.title]) ? 'blue' : 'red', fontWeight: 'bold'}}>{numberWithSpaces((item.total2 - payoff[item.title]))}</span></Typography>\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                    </Link>\r\n                                </td>\r\n                            );\r\n                        })\r\n                    }\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Link} from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport './css/CardProvider.css'\r\nimport DialogCardProviders from \"./UI/Dialog/DialogCardProviders\";\r\nimport axios from \"axios\";\r\nimport config from \"./settings/config\";\r\nimport {inArray, numberWithSpaces} from \"./settings/fns\";\r\n\r\nexport default props => {\r\n    const [provider, setProvider] = useState([]);\r\n    const [company, setCompany] = useState([]);\r\n    const [providerName, setProviderName] = useState([]);\r\n    const [total, setTotal] = useState(0);\r\n    let tmpProvidersCards = [];\r\n    let tempProvider = [];\r\n\r\n    const fetchDataProviderCards = async () => {\r\n        const data = await axios.get(`${config.urlDB}/objects.json`);\r\n        for (let item in data.data) {\r\n            if (data.data[item].provider === JSON.parse(localStorage.getItem('currentProvider')) && data.data[item].company === JSON.parse(localStorage.getItem('currentCompany'))) {\r\n                tmpProvidersCards.push([data.data[item].name]);\r\n                tempProvider.push([data.data[item].name, item]);\r\n            }\r\n        }\r\n        localStorage.setItem('objects', JSON.stringify(tempProvider));\r\n\r\n        const dataCompany = await axios.get(`${config.urlDB}/company.json`);\r\n        for (let item in dataCompany.data) {\r\n            if (dataCompany.data[item].title === JSON.parse(localStorage.getItem('currentCompany'))) {\r\n                setCompany(dataCompany.data[item].name);\r\n            }\r\n        }\r\n\r\n        let tmp = JSON.parse(localStorage.getItem('provider'));\r\n        tmp.map(item => {\r\n            if (item[1] === JSON.parse(localStorage.getItem('currentProvider'))) {\r\n                setProviderName(item[0].name);\r\n            }\r\n        });\r\n\r\n        const providersDataPayOff = await axios.get(`${config.urlDB}providersDataPayOff.json`);\r\n        tempProvider.map(value => {\r\n            let subTotal = 0;\r\n            for (let item in providersDataPayOff.data) {\r\n                if (providersDataPayOff.data[item].object === value[1]) {\r\n                    if (!providersDataPayOff.data[item].comment.toLowerCase().includes('долг')) {\r\n                        subTotal += Number(providersDataPayOff.data[item].subTotal);\r\n                        if (providersDataPayOff.data[item].delivery) {\r\n                            subTotal += Number(providersDataPayOff.data[item].delivery.replace(',', '.'));\r\n                        }\r\n                        if (providersDataPayOff.data[item].plain) {\r\n                            subTotal += Number(providersDataPayOff.data[item].plain.replace(',', '.'));\r\n                        }\r\n                        if (providersDataPayOff.data[item].underloading) {\r\n                            subTotal += Number(providersDataPayOff.data[item].underloading.replace(',', '.'));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            for (let i in tmpProvidersCards) {\r\n                if (tmpProvidersCards[i][0] === value[0]) {\r\n                    tmpProvidersCards[i][1] = subTotal;\r\n                }\r\n            }\r\n\r\n        });\r\n        setProvider(tmpProvidersCards);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchDataProviderCards();\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{marginBottom: 100}}>\r\n            <p>\r\n                {\r\n                    JSON.parse(localStorage.getItem('currentCompanyName')) !== null ? JSON.parse(localStorage.getItem('currentCompanyName')) : null\r\n                }\r\n            </p>\r\n            {\r\n                provider.map(item => {\r\n                    return(\r\n                        <Link\r\n                            to={`/projectAccounting/provider/${providerName}/${company}/${item[0]}`}\r\n                            key={Math.random()}\r\n                            onClick={() => {\r\n                                localStorage.setItem('currentObject', JSON.stringify(item[0]));\r\n                            }}\r\n                        >\r\n                            <Button>\r\n                                <Card className='card'>\r\n                                    <div className='cardItem'>\r\n                                        <Typography\r\n                                            className='title'\r\n                                            gutterBottom\r\n                                        >\r\n                                            {item[0]}\r\n                                            <Typography className='cardSum' color=\"textSecondary\">\r\n                                                <b>Взяли</b>: <span style={{color: 'green', fontWeight: 'bold'}}>{numberWithSpaces(item[1])}</span>\r\n                                            </Typography>\r\n                                        </Typography>\r\n                                    </div>\r\n                                </Card>\r\n                            </Button>\r\n                        </Link>\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React, {forwardRef, useEffect, useState} from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {firstLetterToLowerCase, numberWithSpaces} from \"./settings/fns\";\r\nimport axios from \"axios\";\r\nimport config from \"./settings/config\";\r\nimport Select from './UI/Select/Select';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default () => {\r\n    const [state, setState] = useState({});\r\n    const [providersDataPayOffs, setProvidersDataPayOffs] = useState({});\r\n    const [total, setTotal] = useState(0);\r\n    const [isLoad, setIsLoad] = useState(true);\r\n    const [updateCement, setUpdateCement] = useState('');\r\n\r\n    function sortBy(arr) {\r\n        return arr.sort((a, b) => {\r\n            return a[1] > b[1] ? 1 : -1;\r\n        });\r\n    }\r\n\r\n    function sortByDate(arr) {\r\n        return arr.sort((a, b) => {\r\n            let t = a.period.split('.');\r\n            let aDate = `${t[2]}-${t[1]}-${t[0]}`;\r\n            t = b.period.split('.');\r\n            let bDate = `${t[2]}-${t[1]}-${t[0]}`;\r\n            return new Date(aDate) > new Date(bDate) ? 1 : -1;\r\n        });\r\n    }\r\n\r\n    const summ = () => {\r\n        let volume = document.getElementById('volume').value;\r\n        let price = document.getElementById('pricePerOneTon').value;\r\n        let element = document.querySelector('#subTotal');\r\n        let parent = element.parentElement;\r\n        let newElement = document.createElement('input');\r\n        newElement.id = element.id;\r\n        newElement.style = element.style.cssText;\r\n        newElement.placeholder = element.placeholder;\r\n        if (volume.includes(',')) {\r\n            volume = volume.replace(',', '.').replace(' ', '')\r\n        }\r\n        if (price.includes(',')) {\r\n            price = price.replace(',', '.').replace(' ', '')\r\n        }\r\n        newElement.value = Number(volume) * Number(price);\r\n        document.querySelector('#subTotal').remove();\r\n        parent.append(newElement);\r\n    };\r\n\r\n    const fetchDictionaryCement = async (t = null) => {\r\n        const data = await axios.get(`${config.urlDB}dictionaryCement.json`);\r\n        let dataTmpCement = {};\r\n        let dataTmpCement2 = [];\r\n        let dataTmpCement3 = [];\r\n        let dataTmpCement4 = [];\r\n        let providersDataPayOffTmp = [];\r\n        let providersDataPayOffTemp = [];\r\n        let subTotalTmp = 0;\r\n        for (let item in data.data) {\r\n            dataTmpCement2.push([item, data.data[item].name]);\r\n            dataTmpCement3.push([item, data.data[item].name, data.data[item].price]);\r\n        }\r\n\r\n        let tmp = sortBy(dataTmpCement2);\r\n        let tmp2 = sortBy(dataTmpCement3);\r\n\r\n        tmp.map(item => {\r\n            dataTmpCement[item[0]] = item[1];\r\n        });\r\n\r\n        tmp2.map(item => {\r\n            dataTmpCement4[item[0]] = [item[1], item[2]];\r\n        });\r\n\r\n        const updatedCement = (cement) => {\r\n            setUpdateCement(cement);\r\n            let parent = document.querySelector('#pricePerOneTon').parentElement;\r\n            let element = document.querySelector('#pricePerOneTon');\r\n            let newElement = document.createElement('input');\r\n            newElement.id = element.id;\r\n            newElement.style = element.style.cssText;\r\n            newElement.placeholder = element.placeholder;\r\n            newElement.value = dataTmpCement4[cement][1];\r\n            document.querySelector('#pricePerOneTon').remove();\r\n            parent.append(newElement);\r\n            summ();\r\n        };\r\n\r\n        const providersDataPayOff = await axios.get(`${config.urlDB}providersDataPayOff.json`);\r\n        for (let item in providersDataPayOff.data) {\r\n            if (localStorage.getItem('objects')) {\r\n                JSON.parse(localStorage.getItem('objects')).map(value => {\r\n                    if (JSON.parse(localStorage.getItem('currentProvider')) === providersDataPayOff.data[item].provider) {\r\n                        if (value[0] === JSON.parse(localStorage.getItem('currentObject')) && value[1] === providersDataPayOff.data[item].object) {\r\n                            if (!providersDataPayOff.data[item].comment.toLowerCase().includes('долг')) {\r\n                                subTotalTmp += Number(providersDataPayOff.data[item].subTotal.replace(',', '.'));\r\n                                if (providersDataPayOff.data[item].delivery) {\r\n                                    subTotalTmp += Number(providersDataPayOff.data[item].delivery.replace(',', '.'));\r\n                                }\r\n                                if (providersDataPayOff.data[item].plain) {\r\n                                    subTotalTmp += Number(providersDataPayOff.data[item].plain.replace(',', '.'));\r\n                                }\r\n                                if (providersDataPayOff.data[item].underloading) {\r\n                                    subTotalTmp += Number(providersDataPayOff.data[item].underloading.replace(',', '.'));\r\n                                }\r\n                            }\r\n                            providersDataPayOff.data[item].volume = (Number(providersDataPayOff.data[item].volume)  !== 'NaN' && Number(providersDataPayOff.data[item].volume) !== 0) ? numberWithSpaces(providersDataPayOff.data[item].volume.replace(',', '.')) : providersDataPayOff.data[item].volume;\r\n                            providersDataPayOff.data[item].pricePerOneTon = (Number(providersDataPayOff.data[item].pricePerOneTon)  !== 'NaN' && Number(providersDataPayOff.data[item].pricePerOneTon) !== 0) ? numberWithSpaces(providersDataPayOff.data[item].pricePerOneTon.replace(',', '.')) : providersDataPayOff.data[item].pricePerOneTon;\r\n                            providersDataPayOff.data[item].subTotal4Percent = (Number(providersDataPayOff.data[item].subTotal)  !== 'NaN' && Number(providersDataPayOff.data[item].subTotal) !== 0) ? numberWithSpaces(Number(providersDataPayOff.data[item].subTotal.replace(',', '.')) + providersDataPayOff.data[item].subTotal.replace(',', '.') / 100 * 4) : providersDataPayOff.data[item].subTotal;\r\n                            providersDataPayOff.data[item].subTotal = (Number(providersDataPayOff.data[item].subTotal)  !== 'NaN' && Number(providersDataPayOff.data[item].subTotal) !== 0) ? numberWithSpaces(providersDataPayOff.data[item].subTotal.replace(',', '.')) : providersDataPayOff.data[item].subTotal;\r\n                            providersDataPayOff.data[item].comment = firstLetterToLowerCase(providersDataPayOff.data[item].comment);\r\n                            providersDataPayOff.data[item].isAccounting = providersDataPayOff.data[item].isAccounting ?? false;\r\n                            providersDataPayOff.data[item].whoCompany = providersDataPayOff.data[item].whoCompany ?? '';\r\n                            providersDataPayOffTmp.push({id: item, data: providersDataPayOff.data[item]});\r\n                            providersDataPayOffTemp.push(providersDataPayOff.data[item]);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        // sortByDate(providersDataPayOffTemp);\r\n\r\n        setTotal(subTotalTmp);\r\n        setProvidersDataPayOffs(providersDataPayOffTmp);\r\n\r\n        setState({\r\n            columns: [\r\n                {\r\n                    title: 'Марка цемента / бетона',\r\n                    field: 'brandCement',\r\n                    emptyValue: '',\r\n                    editable: 'never',\r\n                    headerStyle: {\r\n                        textAlign: 'center'\r\n                    },\r\n                    cellStyle: {\r\n                        fontSize: 'small',\r\n                        padding: '0px',\r\n                        textAlign: 'center'\r\n                    },\r\n                    lookup: dataTmpCement,\r\n\r\n                },\r\n                {\r\n                    title: 'Период',\r\n                    field: 'period',\r\n                    emptyValue: '',\r\n                    editable: 'never',\r\n                    headerStyle: {\r\n                        textAlign: 'center'\r\n                    },\r\n                    cellStyle: {\r\n                        fontSize: 'small',\r\n                        padding: '0px',\r\n                        textAlign: 'center'\r\n                    }\r\n                },\r\n                {\r\n                    title: 'Объем',\r\n                    field: 'volume',\r\n                    emptyValue: '',\r\n                    editable: 'never',\r\n                    headerStyle: {\r\n                        textAlign: 'center'\r\n                    },\r\n                    cellStyle: {\r\n                        fontSize: 'small',\r\n                        padding: '0px',\r\n                        textAlign: 'center'\r\n                    },\r\n                },\r\n                {\r\n                    title: 'Сумма',\r\n                    field: 'subTotal',\r\n                    emptyValue: '',\r\n                    editable: 'never',\r\n                    headerStyle: {\r\n                        textAlign: 'center'\r\n                    },\r\n                    cellStyle: {\r\n                        fontSize: 'small',\r\n                        padding: '0px',\r\n                        textAlign: 'center'\r\n                    },\r\n                },\r\n                {\r\n                    title: 'Сумма (+4%)',\r\n                    field: 'subTotal4Percent',\r\n                    emptyValue: '',\r\n                    editable: 'never',\r\n                    headerStyle: {\r\n                        textAlign: 'center'\r\n                    },\r\n                    cellStyle: {\r\n                        fontSize: 'small',\r\n                        padding: '0px',\r\n                        textAlign: 'center'\r\n                    },\r\n                },\r\n                {\r\n                    title: 'Перевыставлен счет',\r\n                    field: 'isAccounting',\r\n                    type: 'boolean',\r\n                    emptyValue: false,\r\n                    headerStyle: {\r\n                        textAlign: 'center'\r\n                    },\r\n                    cellStyle: {\r\n                        fontSize: 'small',\r\n                        padding: '0px',\r\n                        textAlign: 'center'\r\n                    }\r\n                },\r\n                {\r\n                    title: 'Кому выставлен',\r\n                    field: 'whoCompany',\r\n                    emptyValue: '',\r\n                    headerStyle: {\r\n                        textAlign: 'center'\r\n                    },\r\n                    cellStyle: {\r\n                        fontSize: 'small',\r\n                        padding: '0px',\r\n                        textAlign: 'center'\r\n                    },\r\n                    render: (data) => {\r\n                        return data.whoCompany === '' ? <span style={{color: '#ccc'}}>Здесь пусто...</span> : data.whoCompany;\r\n                    }\r\n                },\r\n            ],\r\n            data: providersDataPayOffTemp\r\n        });\r\n        setIsLoad(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchDictionaryCement();\r\n    }, []);\r\n\r\n    const tableIcons = {\r\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n        SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n    };\r\n\r\n    return (\r\n        <div style={{paddingBottom: 60}}>\r\n            <MaterialTable\r\n                icons={tableIcons}\r\n                localization={{\r\n                    header: {\r\n                        actions: 'Действия',\r\n                    },\r\n                    body: {\r\n                        emptyDataSourceMessage: 'Пока что нет новых записей',\r\n                        filterRow: {\r\n                            filterTooltip: 'Фильтр'\r\n                        },\r\n                        addTooltip: 'Добавить',\r\n                        deleteTooltip: 'Удалить',\r\n                        editTooltip: 'Редактировать',\r\n                        editRow: {\r\n                            deleteText: 'Вы действительно хотите удалить эту запись?',\r\n                            cancelTooltip: 'Отмена',\r\n                            saveTooltip: 'Сохранить'\r\n                        }\r\n                    },\r\n                    grouping: {\r\n                        placeholder: 'Перетащите заголовок...'\r\n                    },\r\n                    toolbar: {\r\n                        addRemoveColumns: 'Добавление и удаление столбцов',\r\n                        nRowsSelected: '{0} запись(ей) выбрано',\r\n                        showColumnsTitle: 'Показать столбцы',\r\n                        showColumnsAriaLabel: 'Показать столбцы',\r\n                        exportTitle: 'Экспорт',\r\n                        exportAriaLabel: 'Экспорт',\r\n                        exportName: 'Экспорт в формате CSV',\r\n                        searchTooltip: 'Поиск',\r\n                        searchPlaceholder: 'Поиск',\r\n                    },\r\n                    pagination: {\r\n                        labelDisplayedRows: '{from}-{to} из {count}',\r\n                        labelRowsSelect: 'строк',\r\n                        labelRowsPerPage: 'Строк на странице:',\r\n                        firstAriaLabel: 'Первая страница',\r\n                        firstTooltip: 'Первая страница',\r\n                        previousAriaLabel: 'Предыдущая страница',\r\n                        previousTooltip: 'Предыдущая страница',\r\n                        nextAriaLabel: 'Следующая страница',\r\n                        nextTooltip: 'Следующая страница',\r\n                        lastAriaLabel: 'Последняя полоса',\r\n                        lastTooltip: 'Последняя полоса',\r\n                    },\r\n                }}\r\n                title={JSON.parse(localStorage.getItem('currentObject'))}\r\n                columns={state.columns}\r\n                data={state.data}\r\n                options={{\r\n                    sorting: false,\r\n                    selection: false,\r\n                    grouping: false,\r\n                    filtering: false,\r\n                    exportButton: true,\r\n                    pageSizeOptions: [10],\r\n                    pageSize: 10,\r\n                    draggable: false,\r\n                    exportAllData: true,\r\n                    paging: false\r\n                }}\r\n                detailPanel={rowData => {\r\n                    if (JSON.parse(localStorage.getItem('currentProvider')) === '-M3ytpeFI7Cry9gqb6c9') {\r\n                        return (\r\n                            <div style={{width: '400px', margin: '10px auto'}}>\r\n                                <span>\r\n                                    <label>Доставка: </label>\r\n                                    <label\r\n                                        style={{border: 'none', borderBottom: '1px solid #ccc', outline: 'none', marginTop: '5px', paddingBottom: '6px', width: '150px', marginRight: '30px'}} id=\"delivery\"\r\n                                    >\r\n                                        {rowData.delivery ? numberWithSpaces(rowData.delivery) : 0}\r\n                                    </label>\r\n                                </span>\r\n                                <span>\r\n                                    <label>Недогруз: </label>\r\n                                    <label\r\n                                        style={{border: 'none', borderBottom: '1px solid #ccc', outline: 'none', marginTop: '5px', paddingBottom: '6px', width: '150px', marginRight: '30px'}} id=\"underloading\"\r\n                                    >\r\n                                        {rowData.underloading ? numberWithSpaces(rowData.underloading) : 0}\r\n                                    </label>\r\n                                </span>\r\n                                <span>\r\n                                    <label>Простой: </label>\r\n                                    <label\r\n                                        style={{border: 'none', borderBottom: '1px solid #ccc', outline: 'none', marginTop: '5px', paddingBottom: '6px', width: '150px',}} id=\"plain\"\r\n                                    >\r\n                                        {rowData.plain ? numberWithSpaces(rowData.plain) : 0}\r\n                                    </label>\r\n                                </span>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }}\r\n                onRowClick={(event, rowData, togglePanel) => {\r\n                    if (JSON.parse(localStorage.getItem('currentProvider')) === '-M3ytpeFI7Cry9gqb6c9') {\r\n                        togglePanel();\r\n                    }\r\n                }}\r\n                isLoading={isLoad}\r\n                editable={{\r\n                    onRowUpdate: (newData, oldData) =>\r\n                        new Promise((resolve) => {\r\n                            setTimeout(() => {\r\n                                resolve();\r\n                                if (oldData) {\r\n                                    setState((prevState) => {\r\n                                        const data = [...prevState.data];\r\n                                        providersDataPayOffs.map(item => {\r\n                                            if (item.data === data[data.indexOf(oldData)]) {\r\n                                                axios.patch(`${config.urlDB}providersDataPayOff/${item.id}.json`, {isAccounting: newData['isAccounting'], whoCompany: newData['whoCompany']}).then(res => {\r\n                                                    fetchDictionaryCement();\r\n                                                });\r\n                                            }\r\n                                        });\r\n                                        data[data.indexOf(oldData)] = newData;\r\n                                        return { ...prevState, data };\r\n                                    });\r\n                                }\r\n                            }, 600);\r\n                        }),\r\n                }}\r\n            />\r\n            <p>Итого: {numberWithSpaces(total)}</p>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default props => {\r\n    const classes = useStyles();\r\n    const [cement, setCement] = React.useState(props.value);\r\n\r\n    const handleChange = (event) => {\r\n        setCement(event.target.value);\r\n        props.updatedCement(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={cement}\r\n                onChange={handleChange}\r\n            >\r\n                {\r\n                    props.data.map(item => (<MenuItem key={item[0]} value={item[0]}>{item[1]}</MenuItem>))\r\n                }\r\n\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n}\r\n","import React, {forwardRef, useEffect, useState} from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {firstLetterToLowerCase, numberWithSpaces} from \"../settings/fns\";\r\nimport axios from 'axios';\r\nimport config from \"../settings/config\";\r\n\r\nexport default props => {\r\n    const [state, setState] = React.useState({});\r\n    const [providersDataPayOffs, setProvidersDataPayOffs] = React.useState({});\r\n    const [total, setTotal] = React.useState(0);\r\n    const [isLoad, setIsLoad] = React.useState(true);\r\n    const [isLength, setIsLength] = React.useState(0);\r\n\r\n    const [payoff, setPayoff] = useState([]);\r\n    const rows = [];\r\n\r\n    useEffect(() => {\r\n        fetchDataTable()\r\n    }, []);\r\n\r\n    function sortByDate(arr) {\r\n        return arr.sort((a, b) => {\r\n            let t = a.date.split('.');\r\n            let aDate = `${t[2]}-${t[1]}-${t[0]}`;\r\n            t = b.date.split('.');\r\n            let bDate = `${t[2]}-${t[1]}-${t[0]}`;\r\n            return new Date(aDate) < new Date(bDate) ? 1 : -1;\r\n        });\r\n    }\r\n\r\n    async function fetchDataTable () {\r\n        const data = await axios.get(`${config.urlDB}payoff.json`);\r\n        for (let item in data.data) {\r\n            data.data[item].payoff = (Number(data.data[item].payoff) !== 'NaN') ? numberWithSpaces(data.data[item].payoff) : data.data[item].payoff;\r\n            if (data.data[item].company === props.company && data.data[item].provider === props.providerId) {\r\n                let dateModified = data.data[item].date.split('.');\r\n                rows.push({\r\n                    id: item,\r\n                    date: `${dateModified[2]}-${dateModified[1]}-${dateModified[0]}`,\r\n                    payoff: data.data[item].payoff,\r\n                    company: data.data[item].company,\r\n                    provider: data.data[item].provider\r\n                })\r\n            }\r\n        }\r\n\r\n        sortByDate(rows);\r\n\r\n        setState({\r\n            columns: [\r\n                {\r\n                    title: 'Дата оплаты',\r\n                    field: 'date',\r\n                    emptyValue: '',\r\n                    type: 'date',\r\n                    cellStyle: {\r\n                        fontSize: 'small',\r\n                    },\r\n                },\r\n                {\r\n                    title: 'Сумма',\r\n                    field: 'payoff',\r\n                    emptyValue: '',\r\n                    cellStyle: {\r\n                        fontSize: 'small',\r\n                        textAlign: 'center'\r\n                    }\r\n                },\r\n            ],\r\n            data: rows\r\n        });\r\n        setIsLoad(false);\r\n        setIsLength(rows.length);\r\n        setPayoff(rows);\r\n    }\r\n\r\n    if (props.isUpdate) {\r\n        fetchDataTable();\r\n    }\r\n\r\n    const tableIcons = {\r\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n        SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n    };\r\n\r\n    if (isLength) {\r\n        return (\r\n            <MaterialTable\r\n                style={{borderRadius: 0}}\r\n                icons={tableIcons}\r\n                localization={{\r\n                    header: {\r\n                        actions: 'Действия',\r\n                    },\r\n                    body: {\r\n                        emptyDataSourceMessage: 'Пока что нет новых записей',\r\n                        filterRow: {\r\n                            filterTooltip: 'Фильтр'\r\n                        },\r\n                        addTooltip: 'Добавить',\r\n                        deleteTooltip: 'Удалить',\r\n                        editTooltip: 'Редактировать',\r\n                        editRow: {\r\n                            deleteText: 'Вы действительно хотите удалить эту запись?',\r\n                            cancelTooltip: 'Отмена',\r\n                            saveTooltip: 'Сохранить'\r\n                        }\r\n                    },\r\n                    grouping: {\r\n                        placeholder: 'Перетащите заголовок...'\r\n                    },\r\n                    toolbar: {\r\n                        addRemoveColumns: 'Добавление и удаление столбцов',\r\n                        nRowsSelected: '{0} запись(ей) выбрано',\r\n                        showColumnsTitle: 'Показать столбцы',\r\n                        showColumnsAriaLabel: 'Показать столбцы',\r\n                        exportTitle: 'Экспорт',\r\n                        exportAriaLabel: 'Экспорт',\r\n                        exportName: 'Экспорт в формате CSV',\r\n                        searchTooltip: 'Поиск',\r\n                        searchPlaceholder: 'Поиск',\r\n                    },\r\n                    pagination: {\r\n                        labelDisplayedRows: '{from}-{to} из {count}',\r\n                        labelRowsSelect: 'строк',\r\n                        labelRowsPerPage: 'Строк на странице:',\r\n                        firstAriaLabel: 'Первая страница',\r\n                        firstTooltip: 'Первая страница',\r\n                        previousAriaLabel: 'Предыдущая страница',\r\n                        previousTooltip: 'Предыдущая страница',\r\n                        nextAriaLabel: 'Следующая страница',\r\n                        nextTooltip: 'Следующая страница',\r\n                        lastAriaLabel: 'Последняя полоса',\r\n                        lastTooltip: 'Последняя полоса',\r\n                    },\r\n                }}\r\n                title={props.companyName}\r\n                columns={state.columns}\r\n                data={state.data}\r\n                options={{\r\n                    sorting: false,\r\n                    selection: false,\r\n                    grouping: false,\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    pageSizeOptions: [5],\r\n                    draggable: false,\r\n                    search: false,\r\n                    columnsButton: false,\r\n                    doubleHorizontalScroll: false,\r\n                    emptyRowsWhenPaging: false,\r\n                    exportAllData: false,\r\n                    header: true,\r\n                    showEmptyDataSourceMessage: false,\r\n                    showFirstLastPageButtons: false,\r\n                    showSelectAllCheckbox: false,\r\n                    showTextRowsSelected: false,\r\n                    tableLayout: 'fixed',\r\n\r\n                }}\r\n                isLoading={isLoad}\r\n\r\n            />\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport config from './settings/config';\r\nimport axios from 'axios';\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport truckIcon from '@iconify/icons-mdi/truck';\r\nimport handshakeIcon from '@iconify/icons-mdi/handshake';\r\nimport dumpTruck from '@iconify/icons-mdi/dump-truck';\r\nimport tankerTruck from '@iconify/icons-mdi/tanker-truck';\r\nimport skullCrossbones from '@iconify/icons-mdi/skull-crossbones';\r\nimport truckFast from '@iconify/icons-mdi/truck-fast';\r\nimport './UI/css/Drawer.css';\r\nimport CardCompany from \"./CardCompany\";\r\nimport {checkMinus, numberWithSpaces} from \"./settings/fns\";\r\nimport {Link} from \"react-router-dom\";\r\nimport CardProviders from \"./CardProviders\";\r\nimport TableProvider from \"./TableProvider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TablePayoff from \"./UI/TablePayoff\";\r\n\r\nconst drawerWidth = 180;\r\nconst drawerWidthRight = 270;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        backgroundColor: '#00CED1',\r\n        textAlign: 'center'\r\n    },\r\n    appBar2: {\r\n        backgroundColor: '#eee',\r\n        top: 'auto',\r\n        bottom: 0,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawer2: {\r\n        width: drawerWidthRight,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerPaper2: {\r\n        width: drawerWidthRight,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drRoot: {\r\n        backgroundColor: '#282c34 !important',\r\n        height: '100vh',\r\n        color: '#fff'\r\n    },\r\n    listColor: {\r\n        color: '#fff',\r\n    }\r\n}));\r\n\r\nexport default props => {\r\n    const [providers, setProviders] = useState([]);\r\n    const [isUpdate, setIsUpdate] = useState(false);\r\n    const [payoff, setPayoff] = useState([]);\r\n    const [debt, setDebt] = useState([]);\r\n    const rows = [];\r\n\r\n    const updateTable = () => {\r\n        setIsUpdate(true);\r\n        setIsUpdate(false);\r\n        fetchData();\r\n    };\r\n\r\n    function arraySum(array){\r\n        var sum = 0;\r\n        for(var i = 0; i < array.length; i++){\r\n            sum += Number(array[i].payoff);\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    const updateDataTable = (data) => {\r\n        localStorage.setItem('currentProvider', JSON.stringify(data));\r\n        fetchData();\r\n        setIsUpdate(true);\r\n        setTimeout(() => {\r\n            setIsUpdate(false);\r\n        }, 1)\r\n    };\r\n\r\n    async function fetchData() {\r\n        const dataProviders = await axios.get(`${config.urlDB}providers.json`);\r\n        let dataProviderTmp = [];\r\n        for(let item in dataProviders.data) {\r\n            dataProviderTmp.push([dataProviders.data[item], item]);\r\n        }\r\n        localStorage.setItem('provider', JSON.stringify(dataProviderTmp))\r\n        setProviders(dataProviderTmp);\r\n\r\n        const data = await axios.get(`${config.urlDB}payoff.json`);\r\n        for (let item in data.data) {\r\n            if (data.data[item].provider === JSON.parse(localStorage.getItem('currentProvider'))) {\r\n                rows.push({company: data.data[item].company, payoff: data.data[item].payoff});\r\n            }\r\n        }\r\n\r\n        let tempProvider = [];\r\n        let tmpProvidersCards = [];\r\n        const objects = await axios.get(`${config.urlDB}/objects.json`);\r\n        for (let item in objects.data) {\r\n            if (objects.data[item].provider === JSON.parse(localStorage.getItem('currentProvider'))) {\r\n                tmpProvidersCards.push([objects.data[item].company, objects.data[item].name, item]);\r\n                tempProvider.push([objects.data[item].name, item]);\r\n            }\r\n        }\r\n\r\n        const providersDataPayOff = await axios.get(`${config.urlDB}providersDataPayOff.json`);\r\n        tempProvider.map(value => {\r\n            let subTotal = 0;\r\n            for (let item in providersDataPayOff.data) {\r\n                if (providersDataPayOff.data[item].object === value[1]) {\r\n                    subTotal += Number(providersDataPayOff.data[item].subTotal.replace(',', '.').replace(/ /g, ''))\r\n                    if (providersDataPayOff.data[item].delivery) {\r\n                        subTotal += Number(providersDataPayOff.data[item].delivery.replace(',', '.'));\r\n                    }\r\n                    if (providersDataPayOff.data[item].plain) {\r\n                        subTotal += Number(providersDataPayOff.data[item].plain.replace(',', '.'));\r\n                    }\r\n                    if (providersDataPayOff.data[item].underloading) {\r\n                        subTotal += Number(providersDataPayOff.data[item].underloading.replace(',', '.'));\r\n                    }\r\n                }\r\n            }\r\n            for (let i in tmpProvidersCards) {\r\n                if (tmpProvidersCards[i][2] === value[1]) {\r\n                    tmpProvidersCards[i][2] = subTotal;\r\n                }\r\n            }\r\n        });\r\n\r\n        let tmpCard = 0;\r\n        tmpProvidersCards.map(i => {\r\n            tmpCard += Number(i[2]);\r\n        });\r\n\r\n        setDebt(tmpCard);\r\n\r\n        setPayoff(arraySum(rows) ? tmpCard - arraySum(rows) : 0);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    const classes = useStyles();\r\n    if (providers.length !== 0) {\r\n        return (\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <AppBar position=\"fixed\" className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h5\">\r\n                            CRM система Integral\r\n                        </Typography>\r\n                    </Toolbar>\r\n                    <div style={{position: \"absolute\", top: 10, right: 10}}>\r\n                        <Link to='/' style={{textDecoration: 'none'}}>\r\n                            <Button style={{color: '#fff', textDecoration: 'none', fontSize: 16}} title='Основная'>\r\n                                Основная\r\n                            </Button>\r\n                        </Link>\r\n                    </div>\r\n                </AppBar>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"permanent\"\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.toolbar} />\r\n                    <List classes={{root: classes.drRoot}}>\r\n                        {\r\n                            providers.map((item, index) => {\r\n                                return(\r\n                                    <Link\r\n                                        to={`/projectAccounting/provider/${item[0].name}`} style={{color: '#fff', textDecoration: 'none'}} onClick={() => {updateDataTable(item[1])}}\r\n                                    >\r\n                                        <ListItem button key={item.name} className={JSON.parse(localStorage.getItem('currentProvider')) === item[1] ? 'isActive' : ''}>\r\n                                            <ListItemIcon classes={{root: classes.listColor}}>\r\n                                                {\r\n                                                    item[0].iconType === 'car' ?\r\n                                                        <Icon icon={truckIcon} /> :\r\n                                                        item[0].iconType === 'handshake' ?\r\n                                                            <Icon icon={handshakeIcon} /> :\r\n                                                            item[0].iconType === 'dump-truck' ?\r\n                                                                <Icon icon={dumpTruck} /> :\r\n                                                                item[0].iconType === 'tanker-truck' ?\r\n                                                                    <Icon icon={tankerTruck} /> :\r\n                                                                    item[0].iconType === 'skull' ?\r\n                                                                        <Icon icon={skullCrossbones} /> :\r\n                                                                        <Icon icon={truckFast} />\r\n                                                }\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={item[0].name} />\r\n                                        </ListItem>\r\n                                    </Link>\r\n                                );\r\n                            })\r\n                        }\r\n                    </List>\r\n                </Drawer>\r\n                <main className={classes.content} style={{paddingLeft: 10, paddingRight: 10}}>\r\n                    {\r\n                        props.type !== undefined && props.type === 'indexProjectAccounting' ?\r\n                            <CardCompany/> : null\r\n                    }\r\n                    {\r\n                        props.type !== undefined && props.type === 'providerProjectAccounting' ?\r\n                            <CardCompany isUpdate={isUpdate}/> : null\r\n                    }\r\n                    {\r\n                        props.type !== undefined && props.type === 'providerObjectProjectAccounting' ?\r\n                            <CardProviders/> : null\r\n                    }\r\n                    {\r\n                        props.type !== undefined && props.type === 'providerObjectDetailProjectAccounting' ?\r\n                            <TableProvider/> : null\r\n                    }\r\n                </main>\r\n                <AppBar position=\"fixed\" className={classes.appBar2}>\r\n                    <Toolbar style={{paddingLeft: 210}}>\r\n                        <Typography variant=\"h6\" noWrap>\r\n                            <span style={{color: 'green', fontWeight: 'bold'}}><b>Взяли</b>: {numberWithSpaces(debt)}</span><br/>\r\n                            <span style={{color: checkMinus(payoff) ? 'blue' : 'red', fontWeight: 'bold'}}><b>Долг</b>: {numberWithSpaces(payoff)}</span>\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    className={classes.drawer2}\r\n                    variant=\"permanent\"\r\n                    classes={{\r\n                        paper: classes.drawerPaper2,\r\n                    }}\r\n                    anchor=\"right\"\r\n                >\r\n                    <div className={classes.toolbar} />\r\n                    <List classes={{root: classes.drRoot}}>\r\n                        {\r\n                            JSON.parse(localStorage.getItem('provider')).map(item => {\r\n                                if (item[1] === JSON.parse(localStorage.getItem('currentProvider'))) {\r\n                                    return(\r\n                                        <TablePayoff providerId={item[1]} isUpdate={isUpdate} companyName={'АО НЬЮ ГРАУНД'} company={'aoNewGround'} updateTable={updateTable}/>\r\n                                    );\r\n                                }\r\n                            })\r\n                        }\r\n                        {\r\n                            JSON.parse(localStorage.getItem('provider')).map(item => {\r\n                                if (item[1] === JSON.parse(localStorage.getItem('currentProvider'))) {\r\n                                    return(\r\n                                        <TablePayoff providerId={item[1]} isUpdate={isUpdate} companyName={'ООО НЬЮ ГРАУНД'} company={'oooNewGround'}/>\r\n                                    );\r\n                                }\r\n                            })\r\n                        }\r\n                        {\r\n                            JSON.parse(localStorage.getItem('provider')).map(item => {\r\n                                if (item[1] === JSON.parse(localStorage.getItem('currentProvider'))) {\r\n                                    return(\r\n                                        <TablePayoff providerId={item[1]} isUpdate={isUpdate} companyName={'ООО ИНТЕГРАЛ'} company={'oooIntegral'}/>\r\n                                    );\r\n                                }\r\n                            })\r\n                        }\r\n                    </List>\r\n                </Drawer>\r\n            </div>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport config from './settings/config';\r\nimport axios from 'axios';\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport truckIcon from '@iconify/icons-mdi/truck';\r\nimport handshakeIcon from '@iconify/icons-mdi/handshake';\r\nimport dumpTruck from '@iconify/icons-mdi/dump-truck';\r\nimport tankerTruck from '@iconify/icons-mdi/tanker-truck';\r\nimport skullCrossbones from '@iconify/icons-mdi/skull-crossbones';\r\nimport truckFast from '@iconify/icons-mdi/truck-fast';\r\nimport './UI/css/Drawer.css';\r\nimport Dialog from './UI/Dialog/Dialog';\r\nimport CardCompany from \"./CardCompany\";\r\nimport {checkMinus, numberWithSpaces} from \"./settings/fns\";\r\nimport {Link, Route, Switch} from \"react-router-dom\";\r\nimport CardProviders from \"./CardProviders\";\r\nimport TableProvider from \"./TableProvider\";\r\nimport Export from \"./Export\";\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TablePayoff from \"./UI/TablePayoff\";\r\nimport DrawerProjectAccounting from \"./projectAccounting/Drawer\";\r\n\r\nconst drawerWidth = 180;\r\nconst drawerWidthRight = 270;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        backgroundColor: '#00CED1',\r\n        textAlign: 'center'\r\n    },\r\n    appBar2: {\r\n        backgroundColor: '#eee',\r\n        top: 'auto',\r\n        bottom: 0,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawer2: {\r\n        width: drawerWidthRight,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerPaper2: {\r\n        width: drawerWidthRight,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drRoot: {\r\n        backgroundColor: '#282c34 !important',\r\n        height: '100vh',\r\n        color: '#fff'\r\n    },\r\n    listColor: {\r\n        color: '#fff',\r\n    }\r\n}));\r\n\r\nexport default props => {\r\n    const [providers, setProviders] = useState([]);\r\n    const [isUpdate, setIsUpdate] = useState(false);\r\n    const [payoff, setPayoff] = useState([]);\r\n    const [debt, setDebt] = useState([]);\r\n    const [total, setTotal] = useState([]);\r\n    const rows = [];\r\n\r\n    const updateTable = () => {\r\n        setIsUpdate(true);\r\n        setIsUpdate(false);\r\n        fetchData();\r\n    };\r\n\r\n    function arraySum(array){\r\n        var sum = 0;\r\n        for(var i = 0; i < array.length; i++){\r\n            sum += Number(array[i].payoff);\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    const updateDataTable = (data) => {\r\n        localStorage.setItem('currentProvider', JSON.stringify(data));\r\n        fetchData();\r\n        setIsUpdate(true);\r\n        setTimeout(() => {\r\n            setIsUpdate(false);\r\n        }, 1)\r\n    };\r\n\r\n    async function fetchData() {\r\n        const dataProviders = await axios.get(`${config.urlDB}providers.json`);\r\n        let dataProviderTmp = [];\r\n        for(let item in dataProviders.data) {\r\n            dataProviderTmp.push([dataProviders.data[item], item]);\r\n        }\r\n        localStorage.setItem('provider', JSON.stringify(dataProviderTmp))\r\n        setProviders(dataProviderTmp);\r\n\r\n        const data = await axios.get(`${config.urlDB}payoff.json`);\r\n        const currentProvider = JSON.parse(localStorage.getItem('currentProvider'));\r\n        for (let item in data.data) {\r\n            if (data.data[item].provider === currentProvider) {\r\n                rows.push({company: data.data[item].company, payoff: data.data[item].payoff});\r\n            }\r\n        }\r\n\r\n        let tempProvider = [];\r\n        let tmpProvidersCards = [];\r\n        const objects = await axios.get(`${config.urlDB}/objects.json`);\r\n        for (let item in objects.data) {\r\n            if (objects.data[item].provider === JSON.parse(localStorage.getItem('currentProvider'))) {\r\n                tmpProvidersCards.push([objects.data[item].company, objects.data[item].name, item]);\r\n                tempProvider.push([objects.data[item].name, item]);\r\n            }\r\n        }\r\n\r\n        const providersDataPayOff = await axios.get(`${config.urlDB}providersDataPayOff.json`);\r\n        tempProvider.map(value => {\r\n            let subTotal = 0;\r\n            let subTotal2 = 0;\r\n            for (let item in providersDataPayOff.data) {\r\n                if (providersDataPayOff.data[item].object === value[1]) {\r\n                    subTotal += Number(providersDataPayOff.data[item].subTotal.replace(',', '.').replace(/ /g, ''))\r\n                    if (providersDataPayOff.data[item].delivery) {\r\n                        subTotal += Number(providersDataPayOff.data[item].delivery.replace(',', '.'));\r\n                    }\r\n                    if (providersDataPayOff.data[item].plain) {\r\n                        subTotal += Number(providersDataPayOff.data[item].plain.replace(',', '.'));\r\n                    }\r\n                    if (providersDataPayOff.data[item].underloading) {\r\n                        subTotal += Number(providersDataPayOff.data[item].underloading.replace(',', '.'));\r\n                    }\r\n                    subTotal2 += Number(providersDataPayOff.data[item].subTotal.replace(',', '.').replace(/ /g, ''))\r\n                    if (providersDataPayOff.data[item].delivery) {\r\n                        subTotal2 += Number(providersDataPayOff.data[item].delivery.replace(',', '.'));\r\n                    }\r\n                    if (providersDataPayOff.data[item].plain) {\r\n                        subTotal2 += Number(providersDataPayOff.data[item].plain.replace(',', '.'));\r\n                    }\r\n                    if (providersDataPayOff.data[item].underloading) {\r\n                        subTotal2 += Number(providersDataPayOff.data[item].underloading.replace(',', '.'));\r\n                    }\r\n                }\r\n\r\n            }\r\n            for (let i in tmpProvidersCards) {\r\n                if (tmpProvidersCards[i][2] === value[1]) {\r\n                    tmpProvidersCards[i][2] = subTotal;\r\n                    tmpProvidersCards[i][3] = subTotal2;\r\n                }\r\n            }\r\n        });\r\n\r\n        let tmpCard = 0;\r\n        let tmpCard2 = 0;\r\n        tmpProvidersCards.map(i => {\r\n            tmpCard += Number(i[2]);\r\n            tmpCard2 += Number(i[3]);\r\n        });\r\n\r\n        setDebt(tmpCard);\r\n        setTotal(tmpCard2);\r\n\r\n        setPayoff(arraySum(rows) ? Math.round(tmpCard - arraySum(rows), 2) : 0);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    const classes = useStyles();\r\n\r\n    if (providers.length !== 0) {\r\n        return (\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <AppBar position=\"fixed\" className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h5\">\r\n                            CRM система Integral\r\n                        </Typography>\r\n                    </Toolbar>\r\n                    <div style={{position: \"absolute\", top: 10, right: 10}}>\r\n                        {/*<Link to='/projectAccounting' style={{textDecoration: 'none'}}>*/}\r\n                        {/*    <Button style={{color: '#fff', textDecoration: 'none', fontSize: 16}} title='Суточная'>*/}\r\n                        {/*        Суточная*/}\r\n                        {/*    </Button>*/}\r\n                        {/*</Link>*/}\r\n                        <Export/>\r\n                        <Link to='/settings'>\r\n                            <Button style={{color: '#fff'}} title='Настройки'>\r\n                                <SettingsIcon />\r\n                            </Button>\r\n                        </Link>\r\n                    </div>\r\n                </AppBar>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"permanent\"\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.toolbar} />\r\n                    <List classes={{root: classes.drRoot}}>\r\n                        {\r\n                            providers.map((item, index) => {\r\n                                return(\r\n                                    <Link\r\n                                        key={index} to={`/provider/${item[0].name}`} style={{color: '#fff', textDecoration: 'none'}} onClick={() => {updateDataTable(item[1])}}\r\n                                    >\r\n                                        <ListItem button key={item.name} className={JSON.parse(localStorage.getItem('currentProvider')) === item[1] ? 'isActive' : ''}>\r\n                                            <ListItemIcon classes={{root: classes.listColor}}>\r\n                                                {\r\n                                                    item[0].iconType === 'car' ?\r\n                                                        <Icon icon={truckIcon} /> :\r\n                                                        item[0].iconType === 'handshake' ?\r\n                                                            <Icon icon={handshakeIcon} /> :\r\n                                                            item[0].iconType === 'dump-truck' ?\r\n                                                                <Icon icon={dumpTruck} /> :\r\n                                                                item[0].iconType === 'tanker-truck' ?\r\n                                                                    <Icon icon={tankerTruck} /> :\r\n                                                                    item[0].iconType === 'skull' ?\r\n                                                                        <Icon icon={skullCrossbones} /> :\r\n                                                                        <Icon icon={truckFast} />\r\n                                                }\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={item[0].name} />\r\n                                        </ListItem>\r\n                                    </Link>\r\n                                );\r\n                            })\r\n                        }\r\n                    </List>\r\n                    <Dialog fetchData={fetchData}/>\r\n                </Drawer>\r\n                <main className={classes.content} style={{paddingLeft: 10, paddingRight: 10}}>\r\n                    {\r\n                        props.type !== undefined && props.type === 'index' ?\r\n                            <CardCompany/> : null\r\n                    }\r\n                    {\r\n                        props.type !== undefined && props.type === 'provider' ?\r\n                            <CardCompany isUpdate={isUpdate}/> : null\r\n                    }\r\n                    {\r\n                        props.type !== undefined && props.type === 'providerObject' ?\r\n                            <CardProviders/> : null\r\n                    }\r\n                    {\r\n                        props.type !== undefined && props.type === 'providerObjectDetail' ?\r\n                            <TableProvider/> : null\r\n                    }\r\n                </main>\r\n                <AppBar position=\"fixed\" className={classes.appBar2}>\r\n                    <Toolbar style={{paddingLeft: 210}}>\r\n                        <Typography variant=\"h6\" noWrap>\r\n                            <span style={{color: 'green', fontWeight: 'bold'}}><b>Взяли</b>: {numberWithSpaces(debt)}</span><br/>\r\n                            <span style={{color: checkMinus(payoff) ? 'blue' : 'red', fontWeight: 'bold'}}><b>Долг</b>: {numberWithSpaces(payoff)}</span><br/>\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    className={classes.drawer2}\r\n                    variant=\"permanent\"\r\n                    classes={{\r\n                        paper: classes.drawerPaper2,\r\n                    }}\r\n                    anchor=\"right\"\r\n                >\r\n                    <div className={classes.toolbar} />\r\n                    <List classes={{root: classes.drRoot}}>\r\n                        {\r\n                            JSON.parse(localStorage.getItem('provider')).map(item => {\r\n                                if (item[1] === JSON.parse(localStorage.getItem('currentProvider'))) {\r\n                                    return(\r\n                                        <TablePayoff providerId={item[1]} isUpdate={isUpdate} companyName={'АО НЬЮ ГРАУНД'} company={'aoNewGround'} updateTable={updateTable}/>\r\n                                    );\r\n                                }\r\n                            })\r\n                        }\r\n                        {\r\n                            JSON.parse(localStorage.getItem('provider')).map(item => {\r\n                                if (item[1] === JSON.parse(localStorage.getItem('currentProvider'))) {\r\n                                    return(\r\n                                        <TablePayoff providerId={item[1]} isUpdate={isUpdate} companyName={'ООО НЬЮ ГРАУНД'} company={'oooNewGround'}/>\r\n                                    );\r\n                                }\r\n                            })\r\n                        }\r\n                        {\r\n                            JSON.parse(localStorage.getItem('provider')).map(item => {\r\n                                if (item[1] === JSON.parse(localStorage.getItem('currentProvider'))) {\r\n                                    return(\r\n                                        <TablePayoff providerId={item[1]} isUpdate={isUpdate} companyName={'ООО ИНТЕГРАЛ'} company={'oooIntegral'}/>\r\n                                    );\r\n                                }\r\n                            })\r\n                        }\r\n                    </List>\r\n                </Drawer>\r\n            </div>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport axios from \"axios\";\r\nimport config from \"../../settings/config\";\r\n\r\nexport default props =>  {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = async () => {\r\n        setOpen(false);\r\n        let numberPayoff = document.querySelector('#numberPayoff').value;\r\n        let price = document.querySelector('#price').value;\r\n        if (numberPayoff !== undefined && numberPayoff !== null && numberPayoff !== '' && price !== undefined && price !== null && price !== '') {\r\n            await axios.post(`${config.urlDB}dictionaryCement.json`, {name: numberPayoff, price: price});\r\n            props.fetchData();\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <Button variant=\"contained\" style={{backgroundColor: 'rgba(0,206,209, .7)', color: '#fff', width: '100%'}} onClick={handleClickOpen}>\r\n                Добавить\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Название цемента/бетона</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"numberPayoff\"\r\n                        label=\"Название цемента/бетона\"\r\n                        type=\"string\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"price\"\r\n                        label=\"Стоимость\"\r\n                        type=\"string\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Отмена\r\n                    </Button>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Сохранить\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport config from \"./settings/config\";\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogAddCement from \"./UI/Dialog/DialogAddCement\";\r\nimport {numberWithSpaces} from \"./settings/fns\";\r\n\r\nexport default () => {\r\n    const [cement, setCement] = useState([]);\r\n    const [provider, setProvider] = useState([]);\r\n    const [objects, setObjects] = useState([]);\r\n\r\n    function TabPanel(props) {\r\n        const { children, value, index, ...other } = props;\r\n\r\n        return (\r\n            <Typography\r\n                component=\"div\"\r\n                role=\"tabpanel\"\r\n                hidden={value !== index}\r\n                id={`full-width-tabpanel-${index}`}\r\n                aria-labelledby={`full-width-tab-${index}`}\r\n                {...other}\r\n            >\r\n                {value === index && <Box p={3}>{children}</Box>}\r\n            </Typography>\r\n        );\r\n    }\r\n\r\n    TabPanel.propTypes = {\r\n        children: PropTypes.node,\r\n        index: PropTypes.any.isRequired,\r\n        value: PropTypes.any.isRequired,\r\n    };\r\n\r\n    function a11yProps(index) {\r\n        return {\r\n            id: `full-width-tab-${index}`,\r\n            'aria-controls': `full-width-tabpanel-${index}`,\r\n        };\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            backgroundColor: theme.palette.background.paper,\r\n            width: 800,\r\n        },\r\n        table: {\r\n            minWidth: 800,\r\n        },\r\n    }));\r\n\r\n    function sortBy(arr) {\r\n        return arr.sort((a, b) => {\r\n            return a.name > b.name ? 1 : -1;\r\n        });\r\n    }\r\n\r\n    const fetchDataCement = async () => {\r\n        const getCement = await axios.get(`${config.urlDB}dictionaryCement.json`);\r\n        let tmpCement = [];\r\n        for (let item in getCement.data) {\r\n            tmpCement.push({\r\n                id: item,\r\n                name: getCement.data[item].name,\r\n                price: numberWithSpaces(getCement.data[item].price)\r\n            });\r\n        }\r\n        sortBy(tmpCement);\r\n        setCement(tmpCement);\r\n    };\r\n\r\n    const fetchDataProvider = async () => {\r\n        const getProvider = await axios.get(`${config.urlDB}providers.json`);\r\n        let tmpProvider = [];\r\n        for (let item in getProvider.data) {\r\n            tmpProvider.push({\r\n                id: item,\r\n                name: getProvider.data[item].name\r\n            });\r\n        }\r\n        setProvider(tmpProvider);\r\n    };\r\n\r\n    const fetchDataObjects = async () => {\r\n        const getObjects = await axios.get(`${config.urlDB}objects.json`);\r\n        let tmpObjects = [];\r\n        for (let item in getObjects.data) {\r\n            tmpObjects.push({\r\n                id: item,\r\n                name: getObjects.data[item].name,\r\n                provider: getObjects.data[item].provider,\r\n                company: getObjects.data[item].company,\r\n            });\r\n        }\r\n        setObjects(tmpObjects);\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = (index) => {\r\n        setValue(index);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchDataCement();\r\n        fetchDataProvider();\r\n        fetchDataObjects();\r\n    }, []);\r\n\r\n    const saveCement = cement => {\r\n        let element = document.querySelectorAll(`#${cement}`);\r\n        if (element[1].value.includes(',') || element[1].value.includes('.')) {\r\n            element[1].value = element[1].value.replace(' ', '').replace(',', '.');\r\n        }\r\n        let t = {};\r\n        t[element[0].id] = {\r\n            name: element[0].value,\r\n            price: element[1].value\r\n        };\r\n        axios.patch(`${config.urlDB}dictionaryCement.json`, {...t}).then(res => {\r\n            fetchDataCement();\r\n            alert('Данные успешно сохранены');\r\n        });\r\n    };\r\n\r\n    const saveProvider = provider => {\r\n        let element = document.getElementById(provider);\r\n        let t = {};\r\n        t[element.id] = {name: element.value, iconType: 'default'};\r\n        axios.patch(`${config.urlDB}providers.json`, {...t}).then(res => {\r\n            fetchDataProvider();\r\n            alert('Данные успешно сохранены');\r\n        });\r\n    };\r\n\r\n    const saveObject = (object, provider, company) => {\r\n        let element = document.getElementById(object);\r\n        let t = {};\r\n        t[element.id] = {name: element.value, company: company, provider: provider};\r\n        axios.patch(`${config.urlDB}objects.json`, {...t}).then(res => {\r\n            fetchDataObjects();\r\n            alert('Данные успешно сохранены');\r\n        });\r\n    };\r\n\r\n    return(\r\n        <div className={classes.root} style={{marginTop: 30, marginBottom: 80}}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant=\"fullWidth\"\r\n                    aria-label=\"full width tabs example\"\r\n                >\r\n                    <Tab label=\"Марка цемента/бетона\" {...a11yProps(0)} />\r\n                    <Tab label=\"Постащики\" {...a11yProps(1)} />\r\n                    <Tab label=\"Объекты\" {...a11yProps(2)} />\r\n                </Tabs>\r\n            </AppBar>\r\n            <SwipeableViews\r\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                index={value}\r\n                onChangeIndex={handleChangeIndex}\r\n            >\r\n                <TabPanel value={value} index={0} dir={theme.direction}>\r\n                    <DialogAddCement fetchData={fetchDataCement}/>\r\n                    <br/>\r\n                    <table>\r\n                        {\r\n                            cement.map(item => {\r\n                                return(\r\n                                    <tr key={item.id} >\r\n                                        <td>\r\n                                            <TextField id={item.id} variant=\"outlined\" defaultValue={item.name} style={{width: 430, marginRight: 20}}/>\r\n                                        </td>\r\n                                        <td>\r\n                                            <TextField id={item.id} variant=\"outlined\" defaultValue={item.price} style={{width: 150, marginRight: 20}}/>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button variant=\"contained\" style={{backgroundColor: 'rgba(0,206,209, .7)', color: '#fff'}} onClick={() => {saveCement(item.id)}}>\r\n                                                Сохранить\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </table>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1} dir={theme.direction}>\r\n                    <table>\r\n                        {\r\n                            provider.map(item => {\r\n                                return(\r\n                                    <tr key={item.id} >\r\n                                        <td>\r\n                                            <TextField id={item.id}  variant=\"outlined\" defaultValue={item.name} style={{width: 600, marginRight: 20}}/>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button variant=\"contained\" style={{backgroundColor: 'rgba(0,206,209, .7)', color: '#fff'}} onClick={() => {saveProvider(item.id)}}>\r\n                                                Сохранить\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </table>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2} dir={theme.direction}>\r\n                    <table>\r\n                        {\r\n                            objects.map(item => {\r\n                                return(\r\n                                    <tr key={item.id} >\r\n                                        <td>\r\n                                            <TextField id={item.id} variant=\"outlined\" defaultValue={item.name} style={{width: 600, marginRight: 20}}/>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button variant=\"contained\" style={{backgroundColor: 'rgba(0,206,209, .7)', color: '#fff'}} onClick={() => {saveObject(item.id, item.provider, item.company)}}>\r\n                                                Сохранить\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </table>\r\n                </TabPanel>\r\n            </SwipeableViews>\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport  './css/Login.css';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport  axios from \"axios\";\r\nimport config from \"./settings/config\";\r\nimport md5 from 'md5';\r\nimport Drawer from \"./Drawer\";\r\nimport DrawerProjectAccounting from \"./projectAccounting/Drawer\";\r\n\r\nexport default () => {\r\n    const [data, setData] = useState({\r\n        token: '',\r\n        login: ''\r\n    });\r\n\r\n    async function loginHandler(event)  {\r\n        if (event.key === 'Enter' || event.key === undefined) {\r\n            const users = await axios.get(`${config.urlDB}users.json`);\r\n            for (let item in users.data) {\r\n                if (users.data[item].login === data.login && users.data[item].password === md5(data.password)) {\r\n                    let t = md5(users.data[item].login + users.data[item].password + new Date());\r\n                    localStorage.setItem('token', JSON.stringify(t))\r\n                    localStorage.setItem('login', JSON.stringify(users.data[item].login));\r\n                    setData({\r\n                        ...data,\r\n                        token: t,\r\n                        login: users.data[item].login\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (data.token || localStorage.getItem('token')) {\r\n        if (data.login === 'adder' || JSON.parse(localStorage.getItem('login')) === 'adder') {\r\n            return (\r\n                <Drawer type={'index'}/>\r\n            );\r\n        } else if (data.login === 'adder' || JSON.parse(localStorage.getItem('login')) === 'adder' || data.login === 'accounting' || JSON.parse(localStorage.getItem('login')) === 'accounting'){\r\n            return (\r\n                <DrawerProjectAccounting type={'indexProjectAccounting'}/>\r\n            );\r\n        }\r\n    } else {\r\n        return(\r\n            <div className='Auth'>\r\n                <h1>Авторизация</h1>\r\n                <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <div>\r\n                        <TextField\r\n                            id=\"outlined-email-input\"\r\n                            label=\"Login\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            onKeyPress={loginHandler}\r\n                            onChange={e => setData({...data, login: e.target.value})}\r\n                        /><br/>\r\n                        <TextField\r\n                            id=\"outlined-email-input\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            autoComplete=\"password\"\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            onKeyPress={loginHandler}\r\n                            onChange={e => setData({...data, password: e.target.value})}\r\n                        /><br/>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            className='btnAuth'\r\n                            onClick={loginHandler}\r\n                        >\r\n                            Войти\r\n                        </Button>\r\n                    </div>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n","import React from 'react';\nimport './App.css';\nimport {Route, Switch, withRouter} from 'react-router-dom';\nimport Drawer from \"./componets/Drawer\";\nimport DrawerProjectAccounting from \"./componets/projectAccounting/Drawer\";\nimport Settings from './componets/Settings';\nimport Login from './componets/Login';\n\nconst DrawerMain = () => {\n    return <Drawer type={'index'}/>\n};\n\nconst ProjectAccountingDrawerMain = () => {\n    return <DrawerProjectAccounting type={'indexProjectAccounting'}/>\n};\n\nconst DrawerProvider = () => {\n    return <Drawer type={'provider'}/>\n};\n\nconst ProjectAccountingDrawerProvider = () => {\n    return <DrawerProjectAccounting type={'providerProjectAccounting'}/>\n};\n\nconst DrawerProviderObject = () => {\n    return <Drawer type={'providerObject'}/>\n};\n\nconst ProjectAccountingDrawerProviderObject = () => {\n    return <DrawerProjectAccounting type={'providerObjectProjectAccounting'}/>\n};\n\nconst DrawerProviderObjectDetail = () => {\n    return <Drawer type={'providerObjectDetail'}/>\n};\n\nconst ProjectAccountingDrawerProviderObjectDetail = () => {\n    return <DrawerProjectAccounting type={'providerObjectDetailProjectAccounting'}/>\n};\n\nfunction App() {\n    if (JSON.parse(localStorage.getItem('token'))) {\n        return(\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <Drawer />\n                    <Switch>\n                        <Route exact path='/' component={DrawerMain}/>\n                        <Route exact path='/projectAccounting/' component={ProjectAccountingDrawerMain}/>\n                        <Route exact path='/provider/:name' component={DrawerProvider}/>\n                        <Route exact path='/projectAccounting/provider/:name' component={ProjectAccountingDrawerProvider}/>\n                        <Route exact path='/provider/:name/:companyName' component={DrawerProviderObject}/>\n                        <Route exact path='/projectAccounting/provider/:name/:companyName' component={ProjectAccountingDrawerProviderObject}/>\n                        <Route exact path='/provider/:name/:companyName/:objectName' component={DrawerProviderObjectDetail}/>\n                        <Route exact path='/projectAccounting/provider/:name/:companyName/:objectName' component={ProjectAccountingDrawerProviderObjectDetail}/>\n                        <Route exact path='/settings' component={Settings}/>\n                    </Switch>\n                </header>\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <Login />\n                </header>\n            </div>\n        );\n    }\n\n}\n\nexport default withRouter(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}